{"version":3,"sources":["assets/netflix-2.svg","api.js","components/BigBillboard/index.js","components/Similar/index.js","components/Details/index.js","components/SelectedItem/index.js","genres.js","components/Slider/context.js","components/SliderItem/index.js","hooks/useVisibility.js","hooks/useSlide.js","components/Slider/index.js","hooks/useWindowWidth.js","components/Search/context.js","components/Search/index.js","components/Home/index.js","components/Header/index.js","components/Footer/index.js","components/Routes.js","hooks/useSearch.js","index.js"],"names":["module","exports","API","process","URL","IMAGE_BASE","getMovieInformation","id","a","axios","get","searchMoviesBy","text","page","getMoviesBy","type","discover","then","response","data","BigBillboard","useState","movie","setMovie","fetchMovie","useEffect","className","src","alt","overview","href","icon","faPlay","faQuestionCircle","Similar","additionalMovieInfo","similar","results","map","similarMovie","index","backdrop_path","title","release_date","Details","findOnebyType","name","first","find","item","department","credits","cast","crew","genres","production_companies","SelectedItem","currentSlide","closeInformationWindow","menuOption","setMenuOption","style","Fragment","imdb_id","target","faImdb","vote_average","runtime","faPlus","person","genre","onClick","faTimes","SliderContext","React","createContext","SliderItem","props","ref","useRef","inViewport","setInViewport","showOverlay","setShowOverlay","sliderWrapper","useContext","isActive","callbackOnScreen","callbackOffScreen","observer","IntersectionObserver","entry","isIntersecting","intersectionRatio","root","rootMargin","threshold","current","observe","useVisibility","styled","transform","origin","transition","data-id","poster","onMouseLeave","e","reset","onHoverLeave","onMouseEnter","hover","onHover","poster_path","onSelectSlide","faAngleDown","faPlayCircle","adult","genre_ids","genreName","genresList","faThumbsUp","useSlider","elementWidth","containerRef","countElements","viewed","setViewed","distance","setDistance","containerWidth","setContainerWidth","totalInViewport","setTotalInViewport","setItemWidth","posterStyle","slider","setSlider","setCurrentSlide","content","setContent","sliderIndex","setSliderIndex","sliderPages","setSliderPages","hasPrev","hasNext","setAdditionalMovieInfo","clientWidth","itemWidth","firstChild","Math","ceil","children","slideProps","transformProps","edge","left","right","normal","isOnScreen","slide","split","includes","moveSection","prevState","elementsWithClass","Object","entries","filter","selectedItem","selectedItemIndex","slice","dataset","parseInt","selectSlide","selected","details","scaleTiles","preventDefault","slideItemIndex","findIndex","currentTarget","itemId","hoveredSlide","nextItem","prevItem","resetSize","paginationIndicator","nPages","paginationList","i","push","key","Slider","mainTitle","width","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","contextValue","Provider","value","faChevronRight","faChevronLeft","faUndo","SearchContext","Search","context","searchContext","movies","setMovies","setPage","totalPages","setTotalPages","queryMovies","total_pages","queryNextBatch","nextPage","loadedMovies","concat","searchInput","length","faChevronDown","Home","popularMovies","setPopularMovies","bestMovies","setBestMovies","kidsMovies","setKidsMovies","fetchMovies","Header","pinHeader","setHeader","searchBox","setSearchBox","inputRef","updateSearchInput","handleScroll","scrollY","getBoundingClientRect","top","logo","focus","faSearch","onChange","onBlur","placeholder","maxLength","faGift","faBell","Footer","faReact","faGithub","Routes","searchText","setSearchInput","useCallback","useSearch","basename","component","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13ed59e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/netflix-2.b8ce8f65.svg\";","import axios from \"axios\"\r\n\r\nconst API = process.env.REACT_APP_API_KEY\r\nconst URL = process.env.REACT_APP_API_BASE_URL\r\nexport const IMAGE_BASE = process.env.REACT_APP_BASE_IMAGE_URL\r\n\r\nexport async function getMovieInformation(id) {\r\n\r\n    return await axios.get(`${URL}movie/${id}?${API}&append_to_response=images,credits,similar`)\r\n\r\n}\r\n\r\n\r\nexport async function searchMoviesBy(text, page = 1) {\r\n\r\n    return await axios.get(`${URL}search/movie?${API}&language=en-US&query=${text}&page=${page}&include_adult=true`)\r\n\r\n}\r\n\r\nexport async function getMoviesByGenre(genre) {\r\n\r\n    return await axios.get(`${URL}discover/movie?with_genres=18&sort_by=popularity.desc&${API}`)\r\n\r\n}\r\n\r\n\r\nexport async function getMoviesBy(type) {\r\n\r\n    let discover = null\r\n\r\n    switch (type) {\r\n        case \"best\":\r\n            discover = `${URL}discover/movie?primary_release_year=2015&sort_by=popularity.desc&${API}`\r\n            break;\r\n        case \"populares\":\r\n            discover = `${URL}discover/movie?sort_by=popularity.desc&${API}`\r\n            break;\r\n        case \"kids\":\r\n            discover = `${URL}discover/movie?certification_country=US&certification=G&sort_by=popularity.desc&${API}`\r\n            break;\r\n\r\n    }\r\n\r\n\r\n    return await axios.get(discover)\r\n        .then(function (response) {\r\n\r\n            return response.data\r\n\r\n        })\r\n\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { getMovieInformation } from \"../../api\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction BigBillboard() {\r\n\r\n    const [movie, setMovie] = useState(null)\r\n\r\n    const fetchMovie = async () => {\r\n\r\n        const response = await getMovieInformation(128)\r\n\r\n        return response\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        fetchMovie().then(response => {\r\n            setMovie(response.data)\r\n\r\n        })\r\n\r\n        return () => setMovie(null)\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"billboard-content-limits\">\r\n            <div className=\"billboard-base\">\r\n                <div className=\"billboard-image-wrapper\">\r\n                    <img src={\"https://occ-0-2692-360.1.nflxso.net/dnm/api/v6/6AYY37jfdO6hpXcMjf9Yu5cnmO0/AAAABfa-QSMvnLx0U1cfYX7Yo9mZrmI2M1VeIcNMthA7AmC-EKG2sOh1fx7tkNOU0Eof6aKRF56p-5WZOd66NtatC4fWkCkN.jpg?r=6da\"} alt={\"hero\"} />\r\n\r\n                    <div className=\"billboard-vignette\"></div>\r\n                    <div className=\"billboard-vignette-bottom\"></div>\r\n                    <div className=\"billboard-maturity-rating\"><span>+13</span></div>\r\n\r\n                </div>\r\n\r\n                <div className=\"billboard-information\">\r\n                    <div className=\"logo-and-text\">\r\n\r\n                        <div className=\"billboard-title\">\r\n                            <img src={\"https://occ-0-2692-360.1.nflxso.net/dnm/api/v6/TsSRXvDuraoJ7apdkH6tsHhf-ZQ/AAAABe8TY2uebJ4BFANuTXLz5IhBxCLwg8EV7ZOw4K6pCX6KBw0ifxFHAiVVXLqo0p47hX9OOhCDSplQuMfsAUCNEIZ4pDMEcDnpmBpI.png?r=d80\"} alt=\"title\" />\r\n                        </div>\r\n\r\n                        <div className=\"billboard-description\">\r\n                            <div className=\"episode-title-container\"></div>\r\n                            <div className=\"synopsis\">{movie && movie.overview}</div>\r\n                        </div>\r\n\r\n                        <div className=\"billboard-link\">\r\n                            <a className=\"play-link\" href={\"/\"} >\r\n                                <button className=\"hasLabel\">\r\n                                    <span className=\"play-icon\"><FontAwesomeIcon icon={faPlay} /></span>\r\n                                    <span>Play</span>\r\n                                </button>\r\n                            </a>\r\n\r\n                            <button className=\"hasLabel play-link-secondary\">\r\n                                <span className=\"play-icon\"><FontAwesomeIcon icon={faQuestionCircle} /></span>\r\n                                <span>Information</span>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BigBillboard;\r\n","import React from \"react\"\r\n\r\nimport { IMAGE_BASE } from \"../../api\"\r\n\r\nconst Similar = ({ additionalMovieInfo }) => {\r\n    return (\r\n        <div className=\"menu-similar\">\r\n            <div className=\"menu-similar-content\">\r\n\r\n\r\n                {additionalMovieInfo.similar.results.map((similarMovie, index) => {\r\n\r\n                    if (index < 4) {\r\n                        return (\r\n                            <div className=\"similar-item\">\r\n                                <div className=\"similar-item-image\"><img src={`${IMAGE_BASE}original/${similarMovie.backdrop_path}`} alt={\"item\"} /></div>\r\n                                <div className=\"similar-item-metada\">\r\n                                    <span className=\"similar-item-title\">{similarMovie.title}</span><br />\r\n                                    <span className=\"release-date\">{similarMovie.release_date}</span>\r\n                                </div>\r\n                                <div className=\"similar-item-synopsis\">{similarMovie.overview}</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Similar","import React from \"react\"\r\n\r\nconst Details = ({ additionalMovieInfo }) => {\r\n\r\n\r\n    const findOnebyType = (name, type, data) => {\r\n\r\n        let first = data.find((item, index) => item.department == type)\r\n\r\n        if (first) {\r\n            return (\r\n                <div className=\"menu-details-item\">\r\n                    <span className=\"details-item-title\">{name}</span>\r\n                    <span>{first.name}</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu-details\">\r\n            <div className=\"menu-details-content\">\r\n                <div className=\"menu-details-item\">\r\n                    <span className=\"details-item-title\">Crew</span>\r\n                    {additionalMovieInfo.credits.cast.map((item, index) => {\r\n                        if (index < 10) {\r\n                            return <span>{item.name}</span>\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n                {findOnebyType(\"Directing\", \"Directing\", additionalMovieInfo.credits.crew)}\r\n\r\n                {findOnebyType(\"Editing\", \"Editing\", additionalMovieInfo.credits.crew)}\r\n\r\n                {findOnebyType(\"Sound\", \"Sound\", additionalMovieInfo.credits.crew)}\r\n\r\n                <div className=\"menu-details-item\">\r\n                    <span className=\"details-item-title\">Genres</span>\r\n                    {additionalMovieInfo.genres.map((item, index) => {\r\n                        return (\r\n                            <span>{item.name}</span>\r\n                        )\r\n\r\n                    })}\r\n                </div>\r\n\r\n                {additionalMovieInfo.production_companies[0] && (\r\n                    <div className=\"menu-details-item\">\r\n                        <span className=\"details-item-title\">Production</span>\r\n                        <span>{additionalMovieInfo.production_companies[0].name}</span>\r\n\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details","import React, { useState } from \"react\"\r\n\r\nimport Similar from \"../Similar\"\r\nimport Details from \"../Details\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { IMAGE_BASE } from \"../../api\"\r\nimport { faTimes, faPlus, faPlay } from '@fortawesome/free-solid-svg-icons'\r\nimport { faImdb } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nconst SelectedItem = ({ currentSlide, additionalMovieInfo, closeInformationWindow }) => {\r\n\r\n    const [menuOption, setMenuOption] = useState(\"general-info\")\r\n\r\n    return (\r\n        <div className=\"additional-information\">\r\n\r\n\r\n            <div className={`ai-background ${menuOption != \"general-info\" ? \"dim\" : null}`}>\r\n                <div className={`ai-background-shadow`} />\r\n                <div\r\n                    className=\"ai-background-image\"\r\n                    style={{ 'backgroundImage': `url(${IMAGE_BASE}original/${currentSlide.backdrop_path})` }}\r\n                />\r\n\r\n                <div className=\"ai-background-nav-shadow\"></div>\r\n            </div>\r\n\r\n            {additionalMovieInfo ? (\r\n                <React.Fragment>\r\n                    <div className=\"ai-content-area\">\r\n                        <div className=\"ai-content-area-container\">\r\n                            <h3>\r\n                                <div>{currentSlide.title}</div>\r\n                            </h3>\r\n\r\n                            {menuOption == \"general-info\" ? (\r\n                                <div className=\"jaw-bone-common\">\r\n                                    <div className=\"metadata\">\r\n                                        <span className=\"imdb\"><a href={`https://www.imdb.com/title/${additionalMovieInfo.imdb_id}`} target=\"_blank\"><FontAwesomeIcon icon={faImdb} /></a></span>\r\n                                        <span className=\"score\">{additionalMovieInfo.vote_average}</span>\r\n                                        <span className=\"year\">{currentSlide.release_date}</span>\r\n                                        <span className=\"duration\">{additionalMovieInfo.runtime}m</span>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"synopsis\">\r\n                                        {currentSlide.overview}\r\n                                    </div>\r\n\r\n                                    <div className=\"actions\">\r\n                                        <a className=\"play-link\" href={\"/\"} >\r\n                                            <button className=\"hasLabel\">\r\n                                                <span className=\"play-icon\"><FontAwesomeIcon icon={faPlay} /></span>\r\n                                                <span>Play</span>\r\n                                            </button>\r\n                                        </a>\r\n\r\n                                        <button className=\"hasLabel play-link-secondary\">\r\n                                            <span className=\"play-icon\"><FontAwesomeIcon icon={faPlus} /></span>\r\n                                            <span>My list</span>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div className=\"meta-lists\">\r\n                                        <p className=\"inline-list\">\r\n                                            <span>Featuring:</span>\r\n                                            {additionalMovieInfo.credits.cast.map((person, index) => {\r\n                                                if (index < 6) return person.name + \" \"\r\n\r\n                                            })}\r\n                                        </p>\r\n                                        <p className=\"inline-list\">\r\n                                            <span>Genres:</span>\r\n                                            {additionalMovieInfo.genres.map((genre, index) => {\r\n                                                if (index < 6) return genre.name + \" \"\r\n\r\n                                            })}\r\n                                        </p>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n                            ) : menuOption == \"similar\" ? (\r\n                                <Similar additionalMovieInfo={additionalMovieInfo} />) : menuOption == \"details\" ? (\r\n                                    <Details additionalMovieInfo={additionalMovieInfo} />\r\n                                ) : null}\r\n\r\n                            <ul className=\"menu\">\r\n                                <li className={`${menuOption == \"general-info\" && \"current\"}`} onClick={() => setMenuOption(\"general-info\")}>\r\n                                    <a >GENERAL INFORMATION</a><span></span>\r\n                                </li>\r\n                                <li className={`${menuOption == \"similar\" && \"current\"}`} onClick={() => setMenuOption(\"similar\")}>\r\n                                    <a >SIMILAR</a><span></span>\r\n                                </li>\r\n                                <li className={`${menuOption == \"details\" && \"current\"}`} onClick={() => setMenuOption(\"details\")}>\r\n                                    <a >DETAILS</a><span></span>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <button className=\"ai-close-button\" onClick={() => closeInformationWindow()}><span><FontAwesomeIcon icon={faTimes} /></span></button>\r\n\r\n                    </div>\r\n                </React.Fragment>\r\n            ) : (<div className=\"ai-content-area\"><h2>Loading...</h2></div>)}\r\n\r\n\r\n        </div>)\r\n\r\n\r\n}\r\n\r\nexport default SelectedItem","export default [\r\n    {\r\n        \"id\": 28,\r\n        \"name\": \"Action\"\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"name\": \"Adventure\"\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"name\": \"Animation\"\r\n    },\r\n    {\r\n        \"id\": 35,\r\n        \"name\": \"Comedy\"\r\n    },\r\n    {\r\n        \"id\": 80,\r\n        \"name\": \"Crime\"\r\n    },\r\n    {\r\n        \"id\": 99,\r\n        \"name\": \"Documentary\"\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"name\": \"Drama\"\r\n    },\r\n    {\r\n        \"id\": 10751,\r\n        \"name\": \"Family\"\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"name\": \"Fantasy\"\r\n    },\r\n    {\r\n        \"id\": 36,\r\n        \"name\": \"History\"\r\n    },\r\n    {\r\n        \"id\": 27,\r\n        \"name\": \"Horror\"\r\n    },\r\n    {\r\n        \"id\": 10402,\r\n        \"name\": \"Music\"\r\n    },\r\n    {\r\n        \"id\": 9648,\r\n        \"name\": \"Mystery\"\r\n    },\r\n    {\r\n        \"id\": 10749,\r\n        \"name\": \"Romance\"\r\n    },\r\n    {\r\n        \"id\": 878,\r\n        \"name\": \"Science Fiction\"\r\n    },\r\n    {\r\n        \"id\": 10770,\r\n        \"name\": \"TV Movie\"\r\n    },\r\n    {\r\n        \"id\": 53,\r\n        \"name\": \"Thriller\"\r\n    },\r\n    {\r\n        \"id\": 10752,\r\n        \"name\": \"War\"\r\n    },\r\n    {\r\n        \"id\": 37,\r\n        \"name\": \"Western\"\r\n    }\r\n]","import React from 'react';\r\n\r\nconst SliderContext = React.createContext(null);\r\n\r\nexport default SliderContext;","import React, { useRef, useState, useEffect, useContext } from 'react';\r\nimport { IMAGE_BASE } from \"../../api\"\r\nimport genresList from \"../../genres\"\r\nimport SliderContext from \"../Slider/context\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDown, faPlayCircle, faThumbsUp, faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport useVisibility from \"../../hooks/useVisibility\"\r\n\r\n\r\nfunction SliderItem(props) {\r\n\r\n\r\n    const ref = useRef(null)\r\n    const [inViewport, setInViewport] = useState(false)\r\n    const [showOverlay, setShowOverlay] = useState(false)\r\n\r\n    const sliderWrapper = useContext(SliderContext);\r\n\r\n    const itemVisible = () => {\r\n        setInViewport(true)\r\n    }\r\n\r\n    const itemNotVisible = () => {\r\n        setInViewport(false)\r\n    }\r\n\r\n    const onHover = (e) => {\r\n\r\n        if (!sliderWrapper.currentSlide) {\r\n            props.hover(e)\r\n            setShowOverlay(true)\r\n        }\r\n\r\n    }\r\n\r\n    const onHoverLeave = (e) => {\r\n        props.reset(e)\r\n        setShowOverlay(false)\r\n    }\r\n\r\n    const isActive = sliderWrapper.currentSlide && sliderWrapper.currentSlide.id === props.title;\r\n\r\n    useVisibility(ref, itemVisible, itemNotVisible);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [inViewport, setInViewport])\r\n\r\n    const translate = `translateX(${props.transform})`\r\n\r\n    const styled = { transform: translate, \"transformOrigin\": props.origin, transition: \"all 0.3s ease-in-out\" }\r\n\r\n    return (\r\n        <div\r\n            style={styled}\r\n            data-id={props.title}\r\n            className={`slider-item ${inViewport ? \"onScreen\" : \"\"} ${props.poster === true ? \"poster\" : \"card\"}`}\r\n            ref={ref}\r\n            onMouseLeave={(e) => onHoverLeave(e)}\r\n            onMouseEnter={(e) => onHover(e)}\r\n        >\r\n            <a>\r\n                <div className=\"boxart\">\r\n                    {props.poster === true ? (\r\n                        <React.Fragment>\r\n                            {props.data.backdrop_path ? <img src={`${IMAGE_BASE}w500/${props.data.poster_path}`} alt=\"boxart\" /> : <img style={{ \"background\": \"black\" }} alt=\"boxart\" />}\r\n                        </React.Fragment>\r\n                    ) : (\r\n                            <React.Fragment>\r\n                                {props.data.backdrop_path ? <img src={`${IMAGE_BASE}w500/${props.data.backdrop_path}`} alt=\"boxart\" /> : <img style={{ \"background\": \"black\" }} alt=\"boxart\" />}\r\n                            </React.Fragment>\r\n                        )}\r\n\r\n                </div>\r\n            </a>\r\n\r\n            <button onClick={() => props.onSelectSlide(props.title)} className=\"show-details\">\r\n                <span><FontAwesomeIcon icon={faAngleDown} /></span>\r\n            </button>\r\n\r\n            {props.poster === false && (\r\n                <div className={`item-overlay ${showOverlay ? \"open\" : \"\"}`}>\r\n                    <div className=\"item-wrapper\">\r\n                        <div className=\"item-overview\">\r\n                            <div className=\"item-overview-play\">\r\n                                <span><FontAwesomeIcon icon={faPlayCircle} /></span>\r\n                            </div>\r\n                            <div className=\"item-overview-title\">{props.data.title}</div>\r\n                            <div className=\"item-overview-metadata\">\r\n                                <span className=\"metadata-rating\">New</span>\r\n                                <span className=\"metadata-maturity\">{props.data.adult == true ? \"+18\" : \"+13\"}</span>\r\n                                <span>{props.data.vote_average}</span>\r\n                            </div>\r\n                            <div className=\"item-overview-synopsis\">\r\n                                {props.data.genre_ids.map((item, index) => {\r\n                                    if (index < 3) {\r\n                                        let genreName = genresList.find(genre => genre.id == item)\r\n\r\n                                        if (index > 0) {\r\n                                            return (<React.Fragment><span className=\"separator\"></span><span>{genreName.name}</span></React.Fragment>)\r\n                                        } else {\r\n                                            return <span>{genreName.name}</span>\r\n                                        }\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-actions\">\r\n                            <div className=\"item-action-buttons\">\r\n                                <div><span><FontAwesomeIcon icon={faThumbsUp} /></span></div>\r\n                                <div><span><FontAwesomeIcon icon={faPlus} /></span></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-chevron\"></div>\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isActive && (<div className=\"mark\" />)}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SliderItem;\r\n","import react, { useEffect } from \"react\"\r\n\r\n\r\nexport default function useVisibility(ref, callbackOnScreen, callbackOffScreen) {\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(([entry]) => {\r\n\r\n            if (!entry.isIntersecting || entry.intersectionRatio < 0.8) {\r\n                callbackOffScreen()\r\n            } else {\r\n                callbackOnScreen()\r\n            }\r\n        }, {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: [0, 0.8]\r\n        })\r\n\r\n        if (ref.current) {\r\n            observer.observe(ref.current)\r\n        }\r\n    }, [])\r\n}","import React, { useState, useRef, useEffect } from 'react'\r\nimport { getMovieInformation } from \"../api\"\r\n\r\nconst useSlider = (elementWidth, containerRef, countElements, data, poster) => {\r\n\r\n    const [viewed, setViewed] = useState(0);\r\n    const [distance, setDistance] = useState(0);\r\n    const [containerWidth, setContainerWidth] = useState(0);\r\n    const [totalInViewport, setTotalInViewport] = useState(0)\r\n    const [itemWidth, setItemWidth] = useState(0)\r\n    const [posterStyle, setPosterStyle] = useState(poster)\r\n\r\n    const [slider, setSlider] = useState(null)\r\n    const [currentSlide, setCurrentSlide] = useState(null);\r\n    const [content, setContent] = useState(data)\r\n\r\n    const [sliderIndex, setSliderIndex] = useState(0)\r\n    const [sliderPages, setSliderPages] = useState(0)\r\n\r\n    const hasPrev = distance < 0;\r\n    const hasNext = (viewed + totalInViewport) < countElements;\r\n\r\n    const [additionalMovieInfo, setAdditionalMovieInfo] = useState(null)\r\n\r\n    useEffect(() => {\r\n\r\n        if (containerRef.current && data) {\r\n\r\n            const containerWidth = containerRef.current.clientWidth;\r\n            const itemWidth = containerRef.current.firstChild.clientWidth\r\n            const totalInViewport = Math.ceil(containerWidth / itemWidth)\r\n\r\n            setSlider(containerRef.current.children)\r\n            setItemWidth(itemWidth)\r\n            setContainerWidth(containerWidth);\r\n            setTotalInViewport(totalInViewport);\r\n            setSliderPages(countElements / totalInViewport)\r\n\r\n        }\r\n    }, [elementWidth])\r\n\r\n\r\n    let slideProps = {\r\n        style: { transform: `translate3d(${distance}px, 0, 0)` }\r\n    };\r\n\r\n    let transformProps = {\r\n        edge: {\r\n            left: posterStyle ? \"-5%\" : \"-35%\",\r\n            right: posterStyle ? \"5%\" : \"35%\"\r\n        },\r\n        normal: {\r\n            left: posterStyle ? \"-10%\" : \"-70%\",\r\n            right: posterStyle ? \"10%\" : \"70%\"\r\n        }\r\n    }\r\n\r\n\r\n    const paginationIndicator = (nPages) => {\r\n\r\n        let paginationList = []\r\n\r\n        for (let i = 0; i < nPages; i++) {\r\n\r\n            if (sliderIndex == i) {\r\n                paginationList.push(<li className=\"active\" key={i}></li>)\r\n            } else {\r\n                paginationList.push(<li key={i}></li>)\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return paginationList\r\n\r\n    }\r\n\r\n\r\n    const moveSection = (type) => {\r\n\r\n\r\n        if (type == \"right\") {\r\n\r\n            setViewed(viewed + totalInViewport);\r\n            setDistance(distance - containerWidth)\r\n            setSliderIndex(prevState => prevState + 1)\r\n\r\n\r\n        } else if (type == \"left\") {\r\n\r\n            setViewed(viewed - totalInViewport);\r\n            setDistance(distance + containerWidth);\r\n            setSliderIndex(prevState => prevState - 1)\r\n\r\n        } else if (type == \"reset\") {\r\n            setViewed(0);\r\n            setDistance(0)\r\n            setSliderIndex(0)\r\n        }\r\n\r\n\r\n\r\n        if (currentSlide) {\r\n\r\n            let elementsWithClass = Object.entries(slider).filter(item => {\r\n\r\n                if (item[1].className.includes(\"onScreen\")) return true\r\n            })\r\n\r\n            let selectedItem = null\r\n            let selectedItemIndex = null\r\n\r\n\r\n            if (type == \"right\") {\r\n\r\n\r\n                elementsWithClass = elementsWithClass.slice(-1)[0]\r\n                elementsWithClass = elementsWithClass[1].dataset.id\r\n\r\n                selectedItem = content.filter((item, index) => {\r\n                    if (item.id === parseInt(elementsWithClass)) {\r\n                        selectedItemIndex = index\r\n                        return true\r\n                    }\r\n\r\n                })[0]\r\n\r\n                selectedItem = content[selectedItemIndex + 1]\r\n\r\n            } else if (type == \"left\") {\r\n\r\n                elementsWithClass = elementsWithClass[0]\r\n                elementsWithClass = elementsWithClass[1].dataset.id\r\n\r\n                selectedItem = content.filter((item, index) => {\r\n                    if (item.id === parseInt(elementsWithClass)) {\r\n                        selectedItemIndex = index\r\n                        return true\r\n                    }\r\n\r\n                })[0]\r\n\r\n                selectedItem = content[selectedItemIndex - 1]\r\n\r\n            } else if (type == \"reset\") {\r\n                selectedItem = content[0]\r\n            }\r\n\r\n\r\n            setCurrentSlide(selectedItem)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const selectSlide = async (id) => {\r\n\r\n        const selected = await content.filter(item => item.id === id)[0]\r\n        setCurrentSlide(selected)\r\n\r\n        let details = await getMovieInformation(id).then(response => response.data)\r\n        setAdditionalMovieInfo(details)\r\n\r\n    }\r\n\r\n    const closeInformationWindow = () => {\r\n        setCurrentSlide(null)\r\n        setAdditionalMovieInfo(null)\r\n    }\r\n\r\n    const scaleTiles = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if (currentSlide) return\r\n\r\n        if (!slider) return\r\n\r\n        const slideItemIndex = Object.entries(slider).findIndex(item => item[1] == e.currentTarget)\r\n\r\n        const itemId = slider[slideItemIndex].dataset.id\r\n\r\n        const hoveredSlide = content.filter(item => item.id === parseInt(itemId))[0]\r\n\r\n\r\n        let nextItem = isOnScreen(slider[slideItemIndex + 1])\r\n        let prevItem = isOnScreen(slider[slideItemIndex - 1])\r\n\r\n        //EDGE CASE : CHECK IF FIRST LEFT OR LAST RIGHT ELEMENT\r\n\r\n        if (prevItem && nextItem) {\r\n\r\n            setContent(prevState => {\r\n\r\n                let newState = prevState.map((item, index) => {\r\n\r\n                    item.origin = \"center center\"\r\n\r\n                    if (hoveredSlide.id != item.id && index > slideItemIndex) {\r\n                        item.transform = transformProps.edge.right\r\n\r\n                        return item\r\n                    } else if (hoveredSlide.id != item.id && index < slideItemIndex) {\r\n                        item.transform = transformProps.edge.left\r\n                        return item\r\n                    } else {\r\n                        item.transform = \"0px\"\r\n                        return item\r\n                    }\r\n\r\n                })\r\n\r\n                return newState\r\n            })\r\n\r\n\r\n        } else if (!prevItem) {\r\n\r\n            setContent(prevState => {\r\n\r\n                let newState = prevState.map((item, index) => {\r\n\r\n                    if (hoveredSlide.id != item.id && index > slideItemIndex) {\r\n                        item.transform = transformProps.normal.right\r\n                        item.origin = \"center center\"\r\n                        return item\r\n                    } else {\r\n                        item.transform = \"0px\"\r\n                        item.origin = \"left center\"\r\n\r\n                        return item\r\n                    }\r\n                })\r\n\r\n                return newState\r\n            })\r\n\r\n\r\n        } else if (!nextItem) {\r\n\r\n            setContent(prevState => {\r\n\r\n                let newState = prevState.map((item, index) => {\r\n                    if (hoveredSlide.id != item.id && index < slideItemIndex) {\r\n                        item.transform = transformProps.normal.left\r\n                        item.origin = \"center center\"\r\n                        return item\r\n                    } else {\r\n                        item.transform = \"0px\"\r\n                        item.origin = \"center right \"\r\n                        return item\r\n                    }\r\n                })\r\n\r\n                return newState\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const isOnScreen = (slide) => {\r\n\r\n        if (slide && slide.className.split(\" \").includes(\"onScreen\")) {\r\n            return true\r\n        }\r\n\r\n        return false\r\n\r\n    }\r\n\r\n    const resetSize = (e) => {\r\n\r\n        setContent(prevState => {\r\n\r\n            let newState = prevState.map((item, index) => {\r\n\r\n                item.transform = \"0px\"\r\n                return item\r\n\r\n            })\r\n\r\n            return newState\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return { moveSection, selectSlide, closeInformationWindow, hasPrev, hasNext, scaleTiles, resetSize, sliderIndex, sliderPages, slideProps, content, currentSlide, additionalMovieInfo, paginationIndicator }\r\n\r\n}\r\n\r\n\r\nexport default useSlider\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport SelectedItem from \"../SelectedItem\"\r\nimport SliderItem from \"../SliderItem\"\r\nimport SliderContext from \"./context\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight, faChevronLeft, faUndo } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\"\r\nimport useSlider from \"../../hooks/useSlide\"\r\n\r\n\r\nfunction Slider({ mainTitle, data, poster }) {\r\n\r\n    const width = useWindowWidth()\r\n    const ref = useRef(null)\r\n\r\n    const {\r\n        moveSection,\r\n        selectSlide,\r\n        closeInformationWindow,\r\n        scaleTiles,\r\n        resetSize,\r\n        sliderPages,\r\n        slideProps,\r\n        hasPrev,\r\n        hasNext,\r\n        content,\r\n        currentSlide,\r\n        additionalMovieInfo,\r\n        paginationIndicator\r\n    } = useSlider(width, ref, 20, data, poster);\r\n\r\n    const contextValue = {\r\n        currentSlide\r\n    };\r\n\r\n    useEffect(() => { }, [width])\r\n\r\n    return (\r\n        <SliderContext.Provider value={contextValue}>\r\n            <div className=\"sliderBox\">\r\n                <h2 className=\"slider-header\">\r\n                    <a href={\"/\"}>\r\n                        <div>{mainTitle}</div>\r\n                        <div className=\"see-more\">Explore more</div>\r\n                        <div className=\"see-more-chevron\"><FontAwesomeIcon icon={faChevronRight} /></div>\r\n                    </a>\r\n                </h2>\r\n\r\n                <div className=\"slider-container\">\r\n                    <div className=\"slider\">\r\n\r\n                        <ul className=\"pagination-indicator\">\r\n\r\n                            {sliderPages > 0 ? (paginationIndicator(sliderPages)) : \"\"}\r\n\r\n                        </ul>\r\n\r\n                        <div className=\"sliderMask showPeek\">\r\n\r\n                            <div className={`slider-content ${currentSlide ? \"open\" : \"\"}`} ref={ref} {...slideProps} >\r\n\r\n                                {content.map(item => {\r\n                                    return <SliderItem\r\n                                        key={item.id}\r\n                                        title={item.id}\r\n                                        data={item}\r\n                                        hover={scaleTiles}\r\n                                        reset={resetSize}\r\n                                        transform={item.transform}\r\n                                        origin={item.origin}\r\n                                        onSelectSlide={selectSlide}\r\n                                        poster={poster}\r\n                                    />\r\n                                })}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {hasNext && (<span className=\"handle handleNext\" onClick={() => moveSection(\"right\")}>\r\n                            <strong><FontAwesomeIcon icon={faChevronRight} /></strong>\r\n                        </span>)}\r\n\r\n                        {hasPrev && (<span className=\"handle handlePrev\" onClick={() => moveSection(\"left\")}>\r\n                            <strong><FontAwesomeIcon icon={faChevronLeft} /></strong>\r\n                        </span>)}\r\n\r\n                        {/* GO BACK TO ZERO */}\r\n                        {hasPrev && hasNext === false ? (<span className=\"handle handleNext\" onClick={() => moveSection(\"reset\")}>\r\n                            <strong><FontAwesomeIcon icon={faUndo} /></strong>\r\n                        </span>) : null}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {currentSlide && <SelectedItem currentSlide={currentSlide} additionalMovieInfo={additionalMovieInfo} closeInformationWindow={closeInformationWindow} />}\r\n\r\n            </div>\r\n        </SliderContext.Provider>\r\n    );\r\n}\r\n\r\nexport default Slider;\r\n","import { useState, useEffect } from \"react\"\r\n\r\nexport default function useWindowWidth() {\r\n\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n\r\n    const handleResize = () => setWidth(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        };\r\n    }, [width])\r\n\r\n\r\n    return width\r\n}","import React from 'react';\r\n\r\nconst SearchContext = React.createContext(null);\r\n\r\nexport default SearchContext;","import React, { useContext, useEffect, useState } from \"react\"\r\nimport searchContext from \"../Search/context\"\r\nimport { searchMoviesBy, IMAGE_BASE } from \"../../api\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Search = () => {\r\n\r\n    const context = useContext(searchContext)\r\n    const [movies, setMovies] = useState(null)\r\n    const [page, setPage] = useState(1)\r\n    const [totalPages, setTotalPages] = useState(null)\r\n\r\n    const queryMovies = async (text, page) => {\r\n        return await searchMoviesBy(text, page).then(response => {\r\n\r\n            setMovies(response.data.results)\r\n            setPage(response.data.page)\r\n            setTotalPages(response.data.total_pages)\r\n\r\n        })\r\n    }\r\n\r\n    const loadMoreMovies = (text) => {\r\n        queryNextBatch(text, page)\r\n    }\r\n\r\n    const queryNextBatch = async (text, page) => {\r\n\r\n        let nextPage = page + 1\r\n\r\n        return await searchMoviesBy(text, nextPage).then(response => {\r\n\r\n            if (movies) {\r\n\r\n                let loadedMovies = movies.concat(response.data.results)\r\n                setMovies(loadedMovies)\r\n                setPage(response.data.page)\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        queryMovies(context.searchInput, page)\r\n\r\n        return () => setMovies(null)\r\n    }, [context])\r\n\r\n\r\n    const renderPosters = (data) => {\r\n\r\n        return data.map((item, index) => {\r\n\r\n            if (item.poster_path) return <div key={index}><img src={`${IMAGE_BASE}w500/${item.poster_path}`} alt={\"poster\"} /></div>\r\n\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"search-background\">\r\n\r\n            {movies ? (\r\n                <React.Fragment>\r\n                    {movies.length ? (\r\n                        <React.Fragment>\r\n                            <div className=\"search-container\">{renderPosters(movies)}</div>\r\n\r\n                            {page < totalPages ? (\r\n                                <div className=\"load-more\" onClick={() => loadMoreMovies(context.searchInput)}>\r\n                                    <span>\r\n                                        <FontAwesomeIcon icon={faChevronDown} />\r\n                                    </span>\r\n\r\n                                </div>) : null}\r\n\r\n                        </React.Fragment>\r\n\r\n                    ) : (<div className=\"not-found\">No results :/ </div>)}\r\n                </React.Fragment>\r\n            ) : (\r\n                    <div className=\"loading-content\">\r\n                        <div className=\"loading-circle\"></div>\r\n                        <span className=\"loading-name\">LOADING...</span>\r\n                    </div>\r\n\r\n                )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useEffect, useState, useContext } from 'react';\r\nimport { getMoviesBy } from \"../../api\"\r\nimport BigBillboard from \"../BigBillboard\"\r\nimport Slider from \"../Slider\"\r\nimport Search from '../Search';\r\nimport SearchContext from \"../Search/context\"\r\n\r\n\r\nfunction Home() {\r\n\r\n\r\n    const [popularMovies, setPopularMovies] = useState(null)\r\n    const [bestMovies, setBestMovies] = useState(null)\r\n    const [kidsMovies, setKidsMovies] = useState(null)\r\n\r\n    const searchContext = useContext(SearchContext)\r\n\r\n\r\n    const fetchMovies = async () => {\r\n        let popularMovies = await getMoviesBy(\"populares\")\r\n        let kidsMovies = await getMoviesBy(\"kids\")\r\n        let bestMovies = await getMoviesBy(\"best\")\r\n\r\n        return { popularMovies, kidsMovies, bestMovies }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchMovies().then(response => {\r\n\r\n            setPopularMovies(response.popularMovies.results)\r\n            setKidsMovies(response.kidsMovies.results)\r\n            setBestMovies(response.bestMovies.results)\r\n\r\n        })\r\n\r\n\r\n        return () => {\r\n            setPopularMovies(null)\r\n            setKidsMovies(null)\r\n            setBestMovies(null)\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {searchContext.searchInput.length > 0 ? (<Search />) : (\r\n                <div>\r\n\r\n                    <BigBillboard />\r\n\r\n                    {popularMovies && <Slider mainTitle={\"Trending now\"} data={popularMovies} poster={false} />}\r\n\r\n                    {kidsMovies && <Slider mainTitle={\"Kids movies\"} data={kidsMovies} poster={true} />}\r\n\r\n                    {bestMovies && <Slider mainTitle={\"Best 2015 movies\"} data={bestMovies} poster={false} />}\r\n\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport SearchContext from \"../Search/context\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch, faGift, faBell } from '@fortawesome/free-solid-svg-icons'\r\nimport logo from \"../../assets/netflix-2.svg\"\r\n\r\n\r\nfunction Header() {\r\n\r\n    const [pinHeader, setHeader] = useState(false)\r\n    const [searchBox, setSearchBox] = useState(false)\r\n    const ref = useRef(null)\r\n    const inputRef = useRef(null)\r\n\r\n    const { searchInput, updateSearchInput } = useContext(SearchContext)\r\n\r\n\r\n    const handleScroll = () => {\r\n\r\n        if (window.scrollY == 0) {\r\n            setHeader(false);\r\n        } else if (ref && ref.current && ref.current.getBoundingClientRect()) {\r\n            setHeader(ref.current.getBoundingClientRect().top <= 0);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const toggleSearchBox = () => {\r\n\r\n        if (!searchBox && inputRef.current) inputRef.current.focus();\r\n\r\n        setSearchBox(prevState => !prevState)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', () => handleScroll);\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"header-height-pinned\">\r\n\r\n\r\n            <div className={`header ${pinHeader ? 'pin-header' : ''}`} ref={ref}>\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt={\"logo\"} />\r\n                </div>\r\n\r\n                <div className=\"header-menu\">\r\n                    <ul className=\"header-list\">\r\n                        <li className=\"header-list-item menu-trigger\">\r\n                            <a href={\"/\"} className=\"navigation-menu active\">Menu</a>\r\n                            <div className=\"submenu\">\r\n                                <div className=\"arrow\"></div>\r\n                                <div className=\"topbar\"></div>\r\n                                <ul>\r\n                                    <li><a href={\"/\"} className=\"active\">Home</a></li>\r\n                                    <li><a href={\"/\"}>TV shows</a></li>\r\n                                    <li><a href={\"/\"}>Movies</a></li>\r\n                                    <li><a href={\"/\"}>Recently added</a></li>\r\n                                    <li><a href={\"/\"}>My list</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"header-list-item\"><a href={\"/\"} className=\"active\">Home</a></li>\r\n                        <li className=\"header-list-item\"><a href={\"/\"}>TV shows</a></li>\r\n                        <li className=\"header-list-item\"><a href={\"/\"}>Movies</a></li>\r\n                        <li className=\"header-list-item\"><a href={\"/\"}>Recently added</a></li>\r\n                        <li className=\"header-list-item\"><a href={\"/\"}>My list</a></li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                <div className=\"header-options\">\r\n                    <div className={`${searchBox ? \"searchBox\" : \"searchIcon\"}`}>\r\n                        <span className=\"icon\" onClick={() => toggleSearchBox()}><FontAwesomeIcon icon={faSearch} /></span>\r\n                        <input className=\"searchInput\"\r\n                            ref={inputRef}\r\n                            value={searchInput}\r\n                            onChange={(e) => updateSearchInput(e.currentTarget.value)}\r\n                            onBlur={() => setSearchBox(false)}\r\n                            type=\"text\" placeholder=\"Titles, People, Genres...\" maxLength=\"80\" />\r\n                    </div>\r\n                    <div><span className=\"icon\"><FontAwesomeIcon icon={faGift} /></span></div>\r\n                    <div><span className=\"icon\"><FontAwesomeIcon icon={faBell} /></span></div>\r\n                    <div className=\"account-menu\">\r\n                        <div className=\"account-dropdown-menu\">\r\n                            <span className=\"presentation\">\r\n                                <img src={\"https://occ-0-2692-360.1.nflxso.net/dnm/api/v6/Z-WHgqd_TeJxSuha8aZ5WpyLcX8/AAAABWyw3UeUMaPP3aLxzskg3Bn5htGHqQymxiEGTbfM91FZ0zJAPoEfYQdvHW7FV06FcdXhPC_4F7zNR7TFKLLv6yo.png?r=88c\"} />\r\n                            </span>\r\n                            <span className=\"caret\"></span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faReact, faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n\r\n            <div className=\"footer-content\">\r\n                <span className=\"copyright\">&copy; 2020 </span> made using <span className=\"react-icon\"><FontAwesomeIcon icon={faReact} /></span> by\r\n            </div>\r\n\r\n            <div className=\"social-links\">\r\n                <a href={\"https://github.com/zygisS22\"} target=\"_blank\"><FontAwesomeIcon icon={faGithub} /></a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\"\r\nimport Header from \"./Header\"\r\nimport Footer from \"./Footer\"\r\n\r\nimport SearchContext from \"./Search/context\"\r\nimport { useSearch } from \"../hooks/useSearch\"\r\n\r\n\r\nconst Routes = () => {\r\n\r\n    const searchText = useSearch()\r\n\r\n    return (\r\n        <div className=\"background-app\">\r\n            <SearchContext.Provider value={searchText}>\r\n                <Header />\r\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                    <Switch>\r\n                        <Route component={Home} exact path=\"/\" />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </SearchContext.Provider>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Routes;","import { useState, useCallback } from \"react\"\r\n\r\nexport const useSearch = () => {\r\n    const [searchInput, setSearchInput] = useState(\"\")\r\n\r\n    const updateSearchInput = useCallback((text) => {\r\n        setSearchInput(text)\r\n    }, [])\r\n\r\n    return { searchInput, updateSearchInput }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './components/Routes';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './assets/App.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Routes />\n    </BrowserRouter>\n    ,\n    document.getElementById('root'));\n\n\n\n\n"],"sourceRoot":""}