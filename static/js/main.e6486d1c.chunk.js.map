{"version":3,"sources":["assets/netflix-2.svg","api.js","components/BigBillboard/index.js","components/Similar/index.js","components/Details/index.js","components/SelectedItem/index.js","genres.js","components/Slider/context.js","components/SliderItem/index.js","hooks/useVisibility.js","hooks/useSlide.js","components/Slider/index.js","hooks/useWindowWidth.js","components/Search/context.js","components/Search/index.js","components/Home/index.js","components/Header/index.js","components/Footer/index.js","components/Routes.js","hooks/useSearch.js","index.js"],"names":["module","exports","API","URL","process","IMAGE_BASE","getMovieInformation","id","a","axios","get","searchMoviesBy","text","page","getMoviesBy","type","discover","then","response","data","BigBillboard","useState","movie","setMovie","fetchMovie","useEffect","className","src","alt","overview","href","icon","faPlay","faQuestionCircle","Similar","additionalMovieInfo","similar","results","map","similarMovie","index","key","backdrop_path","title","release_date","Details","findOnebyType","name","first","find","item","department","credits","cast","crew","genres","production_companies","SelectedItem","currentSlide","closeInformationWindow","menuOption","setMenuOption","style","Fragment","imdb_id","target","rel","faImdb","vote_average","runtime","faPlus","person","genre","onClick","faTimes","SliderContext","React","createContext","SliderItem","props","ref","useRef","inViewport","setInViewport","showOverlay","setShowOverlay","sliderWrapper","useContext","isActive","callbackOnScreen","callbackOffScreen","observer","IntersectionObserver","entry","isIntersecting","intersectionRatio","root","rootMargin","threshold","current","observe","useVisibility","styled","transform","origin","transition","data-id","poster","onMouseLeave","e","reset","onHoverLeave","onMouseEnter","hover","onHover","poster_path","onSelectSlide","faAngleDown","faPlayCircle","adult","genre_ids","genreName","genresList","faThumbsUp","useSlider","elementWidth","containerRef","countElements","viewed","setViewed","distance","setDistance","containerWidth","setContainerWidth","totalInViewport","setTotalInViewport","slider","setSlider","setCurrentSlide","content","setContent","sliderIndex","setSliderIndex","sliderPages","setSliderPages","hasPrev","hasNext","setAdditionalMovieInfo","clientWidth","itemWidth","firstChild","Math","ceil","children","slideProps","transformProps","edge","left","right","normal","isOnScreen","slide","split","includes","moveSection","prevState","elementsWithClass","Object","entries","filter","selectedItem","selectedItemIndex","slice","dataset","parseInt","selectSlide","selected","details","scaleTiles","preventDefault","slideItemIndex","findIndex","currentTarget","itemId","hoveredSlide","nextItem","prevItem","resetSize","paginationIndicator","nPages","paginationList","i","push","Slider","mainTitle","width","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","contextValue","Provider","value","faChevronRight","faChevronLeft","faUndo","SearchContext","Search","context","searchContext","movies","setMovies","setPage","totalPages","setTotalPages","queryNextBatch","nextPage","loadedMovies","concat","searchInput","total_pages","fetchData","length","faChevronDown","Home","popularMovies","setPopularMovies","bestMovies","setBestMovies","kidsMovies","setKidsMovies","fetchMovies","Header","pinHeader","setHeader","searchBox","setSearchBox","inputRef","updateSearchInput","handleScroll","scrollY","getBoundingClientRect","top","logo","focus","faSearch","onChange","onBlur","placeholder","maxLength","faGift","faBell","Footer","faReact","faGithub","Routes","searchText","setSearchInput","useCallback","useSearch","basename","component","exact","path","ReactDOM","render","document","getElementById"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,uC,oMCErCC,EAAM,gCACNC,EAAMC,2CACCC,EAAa,8BAEnB,SAAeC,EAAtB,kC,4CAAO,WAAmCC,GAAnC,SAAAC,EAAA,sEAEUC,IAAMC,IAAN,UAAaP,EAAb,iBAAyBI,EAAzB,YAA+BL,EAA/B,+CAFV,oF,sBAOA,SAAeS,EAAtB,kC,4CAAO,WAA8BC,GAA9B,2BAAAJ,EAAA,6DAAoCK,EAApC,+BAA2C,EAA3C,SAEUJ,IAAMC,IAAN,UAAaP,EAAb,wBAAgCD,EAAhC,iCAA4DU,EAA5D,iBAAyEC,EAAzE,wBAFV,oF,sBAaA,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAP,EAAA,sDAECQ,EAAW,KAFZ,KAIKD,EAJL,OAKM,SALN,OAQM,cARN,OAWM,SAXN,8BAMKC,EAAQ,UAAMb,EAAN,4EAA6ED,GAN1F,mCASKc,EAAQ,UAAMb,EAAN,kDAAmDD,GAThE,mCAYKc,EAAQ,UAAMb,EAAN,2FAA4FD,GAZzG,6BAeKc,EAAQ,UAAMb,EAAN,4EAA6ED,GAf1F,yBAoBUO,IAAMC,IAAIM,GAClBC,MAAK,SAAUC,GAEZ,OAAOA,EAASC,QAvBrB,sF,wCCuDQC,MA3Ef,WAAyB,IAAD,EAEMC,mBAAS,MAFf,mBAEbC,EAFa,KAENC,EAFM,KAIdC,EAAU,uCAAG,4BAAAhB,EAAA,sEAEQF,EAAoB,KAF5B,cAETY,EAFS,yBAIRA,GAJQ,2CAAH,qDAmBhB,OAZAO,qBAAU,WAQN,OALAD,IAAaP,MAAK,SAAAC,GACdK,EAASL,EAASC,SAIf,kBAAMI,EAAS,SAEvB,IAIC,yBAAKG,UAAU,4BACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,2BACX,yBAAKC,IAAK,wLAAyLC,IAAK,SAExM,yBAAKF,UAAU,uBACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,6BAA4B,uCAI/C,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,iBAEX,yBAAKA,UAAU,mBACX,yBAAKC,IAAK,gMAAiMC,IAAI,WAGnN,yBAAKF,UAAU,yBACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,YAAYJ,GAASA,EAAMO,WAG9C,yBAAKH,UAAU,kBACX,uBAAGA,UAAU,YAAYI,KAAM,KAC3B,4BAAQJ,UAAU,YACd,0BAAMA,UAAU,aAAY,kBAAC,IAAD,CAAiBK,KAAMC,OACnD,wCAIR,4BAAQN,UAAU,gCACd,0BAAMA,UAAU,aAAY,kBAAC,IAAD,CAAiBK,KAAME,OACnD,oDC9BjBC,EA9BC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACf,OACI,yBAAKT,UAAU,gBACX,yBAAKA,UAAU,wBAGVS,EAAoBC,QAAQC,QAAQC,KAAI,SAACC,EAAcC,GAEpD,OAAIA,EAAQ,EAEJ,yBAAKd,UAAU,eAAee,IAAKD,GAC/B,yBAAKd,UAAU,sBAAqB,yBAAKC,IAAG,UAAKtB,EAAL,oBAA2BkC,EAAaG,eAAiBd,IAAK,UAC1G,yBAAKF,UAAU,uBACX,0BAAMA,UAAU,sBAAsBa,EAAaI,OAAa,6BAChE,0BAAMjB,UAAU,gBAAgBa,EAAaK,eAEjD,yBAAKlB,UAAU,yBAAyBa,EAAaV,WAK1D,WCoCZgB,EA3DC,SAAC,GAA6B,IAA3BV,EAA0B,EAA1BA,oBAGTW,EAAgB,SAACC,EAAMhC,EAAMI,GAE/B,IAAI6B,EAAQ7B,EAAK8B,MAAK,SAACC,EAAMV,GAAP,OAAiBU,EAAKC,aAAepC,KAE3D,GAAIiC,EACA,OACI,yBAAKtB,UAAU,qBACX,0BAAMA,UAAU,sBAAsBqB,GACtC,8BAAOC,EAAMD,QAM7B,OACI,yBAAKrB,UAAU,gBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,qBACX,0BAAMA,UAAU,sBAAhB,QACCS,EAAoBiB,QAAQC,KAAKf,KAAI,SAACY,EAAMV,GACzC,OAAIA,EAAQ,GACD,0BAAMC,IAAKD,GAAQU,EAAKH,MAE5B,SAIdD,EAAc,YAAa,YAAaX,EAAoBiB,QAAQE,MAEpER,EAAc,UAAW,UAAWX,EAAoBiB,QAAQE,MAEhER,EAAc,QAAS,QAASX,EAAoBiB,QAAQE,MAE7D,yBAAK5B,UAAU,qBACX,0BAAMA,UAAU,sBAAhB,UACCS,EAAoBoB,OAAOjB,KAAI,SAACY,EAAMV,GACnC,OACI,0BAAMC,IAAKD,GAAQU,EAAKH,UAMnCZ,EAAoBqB,qBAAqB,IACtC,yBAAK9B,UAAU,qBACX,0BAAMA,UAAU,sBAAhB,cACA,8BAAOS,EAAoBqB,qBAAqB,GAAGT,U,QCiE5DU,EAzGM,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,aAAcvB,EAAkD,EAAlDA,oBAAqBwB,EAA6B,EAA7BA,uBAA6B,EAEhDtC,mBAAS,gBAFuC,mBAE7EuC,EAF6E,KAEjEC,EAFiE,KAIpF,OACI,yBAAKnC,UAAU,0BAGX,yBAAKA,UAAS,wBAAkC,iBAAfkC,EAAgC,MAAQ,OACrE,yBAAKlC,UAAS,yBACd,yBACIA,UAAU,sBACVoC,MAAO,CAAE,gBAAkB,OAAlB,OAA0BzD,EAA1B,oBAAgDqD,EAAahB,cAA7D,QAGb,yBAAKhB,UAAU,8BAGlBS,EACG,kBAAC,IAAM4B,SAAP,KACI,yBAAKrC,UAAU,mBACX,yBAAKA,UAAU,6BACX,4BACI,6BAAMgC,EAAaf,QAGP,iBAAfiB,EACG,yBAAKlC,UAAU,mBACX,yBAAKA,UAAU,YACX,0BAAMA,UAAU,QAAO,uBAAGI,KAAI,qCAAgCK,EAAoB6B,SAAWC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBnC,KAAMoC,QAC9J,0BAAMzC,UAAU,SAASS,EAAoBiC,cAC7C,0BAAM1C,UAAU,QAAQgC,EAAad,cACrC,0BAAMlB,UAAU,YAAYS,EAAoBkC,QAAhD,MAIJ,yBAAK3C,UAAU,YACVgC,EAAa7B,UAGlB,yBAAKH,UAAU,WACX,yBAAKA,UAAU,aACX,4BAAQA,UAAU,YACd,0BAAMA,UAAU,aAAY,kBAAC,IAAD,CAAiBK,KAAMC,OACnD,wCAIR,4BAAQN,UAAU,gCACd,0BAAMA,UAAU,aAAY,kBAAC,IAAD,CAAiBK,KAAMuC,OACnD,2CAIR,yBAAK5C,UAAU,cACX,uBAAGA,UAAU,eACT,4CACCS,EAAoBiB,QAAQC,KAAKf,KAAI,SAACiC,EAAQ/B,GAC3C,OAAIA,EAAQ,EAAU+B,EAAOxB,KAAO,IAC7B,SAGf,uBAAGrB,UAAU,eACT,yCACCS,EAAoBoB,OAAOjB,KAAI,SAACkC,EAAOhC,GACpC,OAAIA,EAAQ,EAAUgC,EAAMzB,KAAO,IAC5B,WAQR,YAAfa,EACA,kBAAC,EAAD,CAASzB,oBAAqBA,IAA0C,YAAfyB,EACrD,kBAAC,EAAD,CAASzB,oBAAqBA,IAC9B,KAER,wBAAIT,UAAU,QACV,wBAAIA,UAAS,UAAoB,iBAAfkC,GAAiC,WAAaa,QAAS,kBAAMZ,EAAc,kBACzF,yBAAKnC,UAAU,eAAf,uBAAuD,gCAE3D,wBAAIA,UAAS,UAAoB,YAAfkC,GAA4B,WAAaa,QAAS,kBAAMZ,EAAc,aACpF,yBAAKnC,UAAU,eAAf,WAA0C,gCAE9C,wBAAIA,UAAS,UAAoB,YAAfkC,GAA4B,WAAaa,QAAS,kBAAMZ,EAAc,aACpF,yBAAKnC,UAAU,eAAf,WAA0C,kCAMtD,4BAAQA,UAAU,kBAAkB+C,QAAS,kBAAMd,MAA0B,8BAAM,kBAAC,IAAD,CAAiB5B,KAAM2C,UAIjH,yBAAKhD,UAAU,mBAAkB,6CC5GnC,GACX,CACI,GAAM,GACN,KAAQ,UAEZ,CACI,GAAM,GACN,KAAQ,aAEZ,CACI,GAAM,GACN,KAAQ,aAEZ,CACI,GAAM,GACN,KAAQ,UAEZ,CACI,GAAM,GACN,KAAQ,SAEZ,CACI,GAAM,GACN,KAAQ,eAEZ,CACI,GAAM,GACN,KAAQ,SAEZ,CACI,GAAM,MACN,KAAQ,UAEZ,CACI,GAAM,GACN,KAAQ,WAEZ,CACI,GAAM,GACN,KAAQ,WAEZ,CACI,GAAM,GACN,KAAQ,UAEZ,CACI,GAAM,MACN,KAAQ,SAEZ,CACI,GAAM,KACN,KAAQ,WAEZ,CACI,GAAM,MACN,KAAQ,WAEZ,CACI,GAAM,IACN,KAAQ,mBAEZ,CACI,GAAM,MACN,KAAQ,YAEZ,CACI,GAAM,GACN,KAAQ,YAEZ,CACI,GAAM,MACN,KAAQ,OAEZ,CACI,GAAM,GACN,KAAQ,YCvEDiD,EAFOC,IAAMC,cAAc,MC+H3BC,MAvHf,SAAoBC,GAGhB,IAAMC,EAAMC,iBAAO,MAHI,EAIa5D,oBAAS,GAJtB,mBAIhB6D,EAJgB,KAIJC,EAJI,OAKe9D,oBAAS,GALxB,mBAKhB+D,EALgB,KAKHC,EALG,KAOjBC,EAAgBC,qBAAWZ,GAwB3Ba,EAAWF,EAAc5B,cAAgB4B,EAAc5B,aAAanD,KAAOwE,EAAMpC,OCtC5E,SAAuBqC,EAAKS,EAAkBC,GACzDjE,qBAAU,WACN,IAAMkE,EAAW,IAAIC,sBAAqB,YAAc,IAAZC,EAAW,qBAE9CA,EAAMC,gBAAkBD,EAAME,kBAAoB,GACnDL,IAEAD,MAEL,CACCO,KAAM,KACNC,WAAY,MACZC,UAAW,CAAC,EAAG,MAGflB,EAAImB,SACJR,EAASS,QAAQpB,EAAImB,WAE1B,CAACnB,EAAKS,EAAkBC,IDsB3BW,CAAcrB,GAxBM,WAChBG,GAAc,MAGK,WACnBA,GAAc,MAqBlB1D,qBAAU,cAEP,CAACyD,EAAYC,IAEhB,IAEMmB,EAAS,CAAEC,UAFF,qBAAiBxB,EAAMwB,UAAvB,KAEwB,gBAAmBxB,EAAMyB,OAAQC,WAAY,wBAEpF,OACI,yBACI3C,MAAOwC,EACPI,UAAS3B,EAAMpC,MACfjB,UAAS,sBAAiBwD,EAAa,WAAa,GAA3C,aAAkE,IAAjBH,EAAM4B,OAAkB,SAAW,QAC7F3B,IAAKA,EACL4B,aAAc,SAACC,GAAD,OAvBD,SAACA,GAClB9B,EAAM+B,MAAMD,GACZxB,GAAe,GAqBU0B,CAAaF,IAClCG,aAAc,SAACH,GAAD,OAjCN,SAACA,GAERvB,EAAc5B,eACfqB,EAAMkC,MAAMJ,GACZxB,GAAe,IA6BM6B,CAAQL,KAE7B,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,WACO,IAAjBqD,EAAM4B,OACH,kBAAC,IAAM5C,SAAP,KACKgB,EAAM5D,KAAKuB,cAAgB,yBAAKf,IAAG,UAAKtB,EAAL,gBAAuB0E,EAAM5D,KAAKgG,aAAevF,IAAI,WAAc,yBAAKkC,MAAO,CAAE,WAAc,SAAWlC,IAAI,YAGlJ,kBAAC,IAAMmC,SAAP,KACKgB,EAAM5D,KAAKuB,cAAgB,yBAAKf,IAAG,UAAKtB,EAAL,gBAAuB0E,EAAM5D,KAAKuB,eAAiBd,IAAI,WAAc,yBAAKkC,MAAO,CAAE,WAAc,SAAWlC,IAAI,cAOxK,4BAAQ6C,QAAS,kBAAMM,EAAMqC,cAAcrC,EAAMpC,QAAQjB,UAAU,gBAC/D,8BAAM,kBAAC,IAAD,CAAiBK,KAAMsF,SAGf,IAAjBtC,EAAM4B,QACH,yBAAKjF,UAAS,uBAAkB0D,EAAc,OAAS,KACnD,yBAAK1D,UAAU,gBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,sBACX,8BAAM,kBAAC,IAAD,CAAiBK,KAAMuF,QAEjC,yBAAK5F,UAAU,uBAAuBqD,EAAM5D,KAAKwB,OACjD,yBAAKjB,UAAU,0BACX,0BAAMA,UAAU,mBAAhB,OACA,0BAAMA,UAAU,sBAA0C,IAArBqD,EAAM5D,KAAKoG,MAAiB,MAAQ,OACzE,8BAAOxC,EAAM5D,KAAKiD,eAEtB,yBAAK1C,UAAU,0BACVqD,EAAM5D,KAAKqG,UAAUlF,KAAI,SAACY,EAAMV,GAC7B,GAAIA,EAAQ,EAAG,CACX,IAAIiF,EAAYC,EAAWzE,MAAK,SAAAuB,GAAK,OAAIA,EAAMjE,KAAO2C,KAEtD,OAAIV,EAAQ,EACA,kBAAC,IAAMuB,SAAP,CAAgBtB,IAAKD,GAAO,0BAAMd,UAAU,cAAmB,8BAAO+F,EAAU1E,OAEjF,0BAAMN,IAAKD,GAAQiF,EAAU1E,MAI5C,OAAO,UAInB,yBAAKrB,UAAU,gBACX,yBAAKA,UAAU,uBACX,6BAAK,8BAAM,kBAAC,IAAD,CAAiBK,KAAM4F,QAClC,6BAAK,8BAAM,kBAAC,IAAD,CAAiB5F,KAAMuC,UAG1C,yBAAK5C,UAAU,mBAO1B8D,GAAa,yBAAK9D,UAAU,WExHzC,IAoSekG,EApSG,SAACC,EAAcC,EAAcC,EAAe5G,EAAMwF,GAAY,IAAD,EAE/CtF,mBAAS,GAFsC,mBAEpE2G,EAFoE,KAE5DC,EAF4D,OAG3C5G,mBAAS,GAHkC,mBAGpE6G,EAHoE,KAG1DC,EAH0D,OAI/B9G,mBAAS,GAJsB,mBAIpE+G,EAJoE,KAIpDC,EAJoD,OAK7BhH,mBAAS,GALoB,mBAKpEiH,EALoE,KAKnDC,EALmD,OAM/ClH,mBAAS,MANsC,mBAMpEmH,EANoE,KAM5DC,EAN4D,OAOnCpH,mBAAS,MAP0B,mBAOpEqC,EAPoE,KAOtDgF,EAPsD,OAQ7CrH,mBAASF,GARoC,mBAQpEwH,EARoE,KAQ3DC,EAR2D,OASrCvH,mBAAS,GAT4B,mBASpEwH,EAToE,KASvDC,EATuD,OAUrCzH,mBAAS,GAV4B,mBAUpE0H,EAVoE,KAUvDC,EAVuD,KAWrEC,EAAUf,EAAW,EACrBgB,EAAWlB,EAASM,EAAmBP,EAZ8B,EAcrB1G,mBAAS,MAdY,mBAcpEc,EAdoE,KAc/CgH,EAd+C,KAgB3E1H,qBAAU,WAEN,GAAIqG,EAAa3B,SAAWhF,EAAM,CAE9B,IAAMiH,EAAiBN,EAAa3B,QAAQiD,YACtCC,EAAYvB,EAAa3B,QAAQmD,WAAWF,YAC5Cd,EAAkBiB,KAAKC,KAAKpB,EAAiBiB,GAEnDZ,EAAUX,EAAa3B,QAAQsD,UAC/BpB,EAAkBD,GAClBG,EAAmBD,GACnBU,EAAejB,EAAgBO,MAGpC,CAACR,EAAc3G,EAAM4G,EAAeF,IAGvC,IAAI6B,EAAa,CACb5F,MAAO,CAAEyC,UAAU,eAAD,OAAiB2B,EAAjB,eAGlByB,GAAiB,CACjBC,KAAM,CACFC,KAAMlD,EAAS,MAAQ,OACvBmD,MAAOnD,EAAS,KAAO,OAE3BoD,OAAQ,CACJF,KAAMlD,EAAS,OAAS,OACxBmD,MAAOnD,EAAS,MAAQ,QAuN1BqD,GAAa,SAACC,GAEhB,SAAIA,IAASA,EAAMvI,UAAUwI,MAAM,KAAKC,SAAS,cA0BrD,MAAO,CAAEC,YA1NW,SAACrJ,GAwBjB,GArBa,UAATA,GAEAkH,EAAUD,EAASM,GACnBH,EAAYD,EAAWE,GACvBU,GAAe,SAAAuB,GAAS,OAAIA,EAAY,MAGxB,SAATtJ,GAEPkH,EAAUD,EAASM,GACnBH,EAAYD,EAAWE,GACvBU,GAAe,SAAAuB,GAAS,OAAIA,EAAY,MAExB,UAATtJ,IACPkH,EAAU,GACVE,EAAY,GACZW,EAAe,IAKfpF,EAAc,CAEd,IAAI4G,EAAoBC,OAAOC,QAAQhC,GAAQiC,QAAO,SAAAvH,GAElD,QAAIA,EAAK,GAAGxB,UAAUyI,SAAS,eAI/BO,EAAe,KACfC,EAAoB,KAGX,UAAT5J,GAIAuJ,GADAA,EAAoBA,EAAkBM,OAAO,GAAG,IACV,GAAGC,QAAQtK,GAEjDmK,EAAe/B,EAAQ8B,QAAO,SAACvH,EAAMV,GACjC,OAAIU,EAAK3C,KAAOuK,SAASR,KACrBK,EAAoBnI,GACb,MAIZ,GAEHkI,EAAe/B,EAAQgC,EAAoB,IAE3B,SAAT5J,GAGPuJ,GADAA,EAAoBA,EAAkB,IACA,GAAGO,QAAQtK,GAEjDmK,EAAe/B,EAAQ8B,QAAO,SAACvH,EAAMV,GACjC,OAAIU,EAAK3C,KAAOuK,SAASR,KACrBK,EAAoBnI,GACb,MAIZ,GAEHkI,EAAe/B,EAAQgC,EAAoB,IAE3B,UAAT5J,IACP2J,EAAe/B,EAAQ,IAI3BD,EAAgBgC,KAgJFK,YAxIL,uCAAG,WAAOxK,GAAP,iBAAAC,EAAA,sEAEOmI,EAAQ8B,QAAO,SAAAvH,GAAI,OAAIA,EAAK3C,KAAOA,KAAI,GAF9C,cAEVyK,EAFU,OAGhBtC,EAAgBsC,GAHA,SAKI1K,EAAoBC,GAAIU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QALtD,OAKZ8J,EALY,OAMhB9B,EAAuB8B,GANP,2CAAH,sDAwIkBtH,uBA9HJ,WAC3B+E,EAAgB,MAChBS,EAAuB,OA4HgCF,UAASC,UAASgC,WAzH1D,SAACrE,GAIhB,GAFAA,EAAEsE,kBAEEzH,GAEC8E,EAAL,CAEA,IAAM4C,EAAiBb,OAAOC,QAAQhC,GAAQ6C,WAAU,SAAAnI,GAAI,OAAIA,EAAK,KAAO2D,EAAEyE,iBAExEC,EAAS/C,EAAO4C,GAAgBP,QAAQtK,GAExCiL,EAAe7C,EAAQ8B,QAAO,SAAAvH,GAAI,OAAIA,EAAK3C,KAAOuK,SAASS,MAAS,GAGtEE,EAAWzB,GAAWxB,EAAO4C,EAAiB,IAC9CM,EAAW1B,GAAWxB,EAAO4C,EAAiB,IAI9CM,GAAYD,EAEZ7C,GAAW,SAAAyB,GAoBP,OAlBeA,EAAU/H,KAAI,SAACY,EAAMV,GAIhC,OAFAU,EAAKsD,OAAS,gBAEVgF,EAAajL,KAAO2C,EAAK3C,IAAMiC,EAAQ4I,GACvClI,EAAKqD,UAAYoD,GAAeC,KAAKE,MAE9B5G,GACAsI,EAAajL,KAAO2C,EAAK3C,IAAMiC,EAAQ4I,GAC9ClI,EAAKqD,UAAYoD,GAAeC,KAAKC,KAC9B3G,IAEPA,EAAKqD,UAAY,MACVrD,SASXwI,EAsBAD,GAER7C,GAAW,SAAAyB,GAcP,OAZeA,EAAU/H,KAAI,SAACY,EAAMV,GAChC,OAAIgJ,EAAajL,KAAO2C,EAAK3C,IAAMiC,EAAQ4I,GACvClI,EAAKqD,UAAYoD,GAAeI,OAAOF,KACvC3G,EAAKsD,OAAS,gBACPtD,IAEPA,EAAKqD,UAAY,MACjBrD,EAAKsD,OAAS,gBACPtD,SAhCnB0F,GAAW,SAAAyB,GAgBP,OAdeA,EAAU/H,KAAI,SAACY,EAAMV,GAEhC,OAAIgJ,EAAajL,KAAO2C,EAAK3C,IAAMiC,EAAQ4I,GACvClI,EAAKqD,UAAYoD,GAAeI,OAAOD,MACvC5G,EAAKsD,OAAS,gBACPtD,IAEPA,EAAKqD,UAAY,MACjBrD,EAAKsD,OAAS,cAEPtD,WA6D8DyI,UAlBvE,SAAC9E,GAEf+B,GAAW,SAAAyB,GASP,OAPeA,EAAU/H,KAAI,SAACY,EAAMV,GAGhC,OADAU,EAAKqD,UAAY,MACVrD,SAWiF2F,cAAaE,cAAaW,aAAYf,UAASjF,eAAcvB,sBAAqByJ,oBA9O1J,SAACC,GAIzB,IAFA,IAAIC,EAAiB,GAEZC,EAAI,EAAGA,EAAIF,EAAQE,IAEpBlD,IAAgBkD,EAChBD,EAAeE,KAAK,wBAAItK,UAAU,SAASe,IAAKsJ,KAEhDD,EAAeE,KAAK,wBAAIvJ,IAAKsJ,KAMrC,OAAOD,KCqCAG,MA7Ff,YAA8C,IAA5BC,EAA2B,EAA3BA,UAAW/K,EAAgB,EAAhBA,KAAMwF,EAAU,EAAVA,OAEzBwF,ECXK,WAA2B,IAAD,EAEX9K,mBAAS+K,OAAOC,YAFL,mBAE9BF,EAF8B,KAEvBG,EAFuB,KAI/BC,EAAe,kBAAMD,EAASF,OAAOC,aAY3C,OAVA5K,qBAAU,WAIN,OAFA2K,OAAOI,iBAAiB,SAAUD,GAE3B,WACHH,OAAOK,oBAAoB,SAAUF,MAE1C,CAACJ,IAGGA,EDLOO,GACR1H,EAAMC,iBAAO,MAHsB,EAmBrC2C,EAAUuE,EAAOnH,EAAK,GAAI7D,EAAMwF,GAbhCyD,EANqC,EAMrCA,YACAW,EAPqC,EAOrCA,YACApH,EARqC,EAQrCA,uBACAuH,EATqC,EASrCA,WACAS,EAVqC,EAUrCA,UACA5C,EAXqC,EAWrCA,YACAW,EAZqC,EAYrCA,WACAT,EAbqC,EAarCA,QACAC,EAdqC,EAcrCA,QACAP,EAfqC,EAerCA,QACAjF,EAhBqC,EAgBrCA,aACAvB,EAjBqC,EAiBrCA,oBACAyJ,EAlBqC,EAkBrCA,oBAGEe,EAAe,CACjBjJ,gBAKJ,OAFAjC,qBAAU,cAAW,CAAC0K,IAGlB,kBAAC,EAAcS,SAAf,CAAwBC,MAAOF,GAC3B,yBAAKjL,UAAU,aACX,wBAAIA,UAAU,iBACV,uBAAGI,KAAM,KACL,6BAAMoK,GACN,yBAAKxK,UAAU,YAAf,gBACA,yBAAKA,UAAU,oBAAmB,kBAAC,IAAD,CAAiBK,KAAM+K,SAIjE,yBAAKpL,UAAU,oBACX,yBAAKA,UAAU,UAEX,wBAAIA,UAAU,wBAETqH,EAAc,EAAK6C,EAAoB7C,GAAgB,IAI5D,yBAAKrH,UAAU,uBAEX,uCAAKA,UAAS,yBAAoBgC,EAAe,OAAS,IAAMsB,IAAKA,GAAS0E,GAEzEf,EAAQrG,KAAI,SAAAY,GACT,OAAO,kBAAC,EAAD,CACHT,IAAKS,EAAK3C,GACVoC,MAAOO,EAAK3C,GACZY,KAAM+B,EACN+D,MAAOiE,EACPpE,MAAO6E,EACPpF,UAAWrD,EAAKqD,UAChBC,OAAQtD,EAAKsD,OACbY,cAAe2D,EACfpE,OAAQA,SAQvBuC,GAAY,0BAAMxH,UAAU,oBAAoB+C,QAAS,kBAAM2F,EAAY,WACxE,gCAAQ,kBAAC,IAAD,CAAiBrI,KAAM+K,QAGlC7D,GAAY,0BAAMvH,UAAU,oBAAoB+C,QAAS,kBAAM2F,EAAY,UACxE,gCAAQ,kBAAC,IAAD,CAAiBrI,KAAMgL,QAIlC9D,IAAuB,IAAZC,EAAqB,0BAAMxH,UAAU,oBAAoB+C,QAAS,kBAAM2F,EAAY,WAC5F,gCAAQ,kBAAC,IAAD,CAAiBrI,KAAMiL,QACxB,OAMlBtJ,GAAgB,kBAAC,EAAD,CAAcA,aAAcA,EAAcvB,oBAAqBA,EAAqBwB,uBAAwBA,OE7F9HsJ,EAFOrI,IAAMC,cAAc,MCgG3BqI,EA5FA,WAEX,IAAMC,EAAU5H,qBAAW6H,GAFV,EAGW/L,mBAAS,MAHpB,mBAGVgM,EAHU,KAGFC,EAHE,OAIOjM,mBAAS,GAJhB,mBAIVR,EAJU,KAIJ0M,EAJI,OAKmBlM,mBAAS,MAL5B,mBAKVmM,EALU,KAKEC,EALF,KAWXC,EAAc,uCAAG,WAAO9M,EAAMC,GAAb,eAAAL,EAAA,6DAEfmN,EAAW9M,EAAO,EAFH,SAINF,EAAeC,EAAM+M,GAAU1M,MAAK,SAAAC,GAE7C,GAAImM,EAAQ,CAER,IAAIO,EAAeP,EAAOQ,OAAO3M,EAASC,KAAKkB,SAC/CiL,EAAUM,GACVL,EAAQrM,EAASC,KAAKN,UAVX,mFAAH,wDAkBpBY,qBAAU,WAcN,OAZe,uCAAG,sBAAAjB,EAAA,sEACDG,EAAewM,EAAQW,YAAajN,GAAMI,MAAK,SAAAC,GAExDoM,EAAUpM,EAASC,KAAKkB,SACxBkL,EAAQrM,EAASC,KAAKN,MACtB4M,EAAcvM,EAASC,KAAK4M,gBALlB,mFAAH,oDAUfC,GAEO,kBAAMV,EAAU,SACxB,CAACH,EAAStM,IAeb,OACI,yBAAKa,UAAU,qBAEV2L,EACG,kBAAC,IAAMtJ,SAAP,KACKsJ,EAAOY,OACJ,kBAAC,IAAMlK,SAAP,KACI,yBAAKrC,UAAU,oBAAkC2L,EAjBzD/K,KAAI,SAACY,EAAMV,GAEnB,OAAIU,EAAKiE,YAAoB,yBAAK1E,IAAKD,GAAO,yBAAKb,IAAG,UAAKtB,EAAL,gBAAuB6C,EAAKiE,aAAevF,IAAK,YAC/F,SAgBUf,EAAO2M,EACJ,yBAAK9L,UAAU,YAAY+C,QAAS,kBA9DxC7D,EA8D6DuM,EAAQW,iBA7DzFJ,EAAe9M,EAAMC,GADF,IAACD,IA+DQ,8BACI,kBAAC,IAAD,CAAiBmB,KAAMmM,QAGrB,MAIjB,yBAAKxM,UAAU,aAAf,mBAGL,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACf,0BAAMA,UAAU,gBAAhB,iBCfTyM,MAlEf,WAAiB,IAAD,EAG8B9M,mBAAS,MAHvC,mBAGL+M,EAHK,KAGUC,EAHV,OAIwBhN,mBAAS,MAJjC,mBAILiN,EAJK,KAIOC,EAJP,OAKwBlN,mBAAS,MALjC,mBAKLmN,EALK,KAKOC,EALP,KAONrB,EAAgB7H,qBAAW0H,GAG3ByB,EAAW,uCAAG,gCAAAlO,EAAA,sEACUM,EAAY,aADtB,cACZsN,EADY,gBAEOtN,EAAY,QAFnB,cAEZ0N,EAFY,gBAGO1N,EAAY,QAHnB,cAGZwN,EAHY,yBAKT,CAAEF,gBAAeI,aAAYF,eALpB,4CAAH,qDAgCjB,OAxBA7M,qBAAU,WAWN,OATAiN,IAAczN,MAAK,SAAAC,GAEfmN,EAAiBnN,EAASkN,cAAc/L,SACxCoM,EAAcvN,EAASsN,WAAWnM,SAClCkM,EAAcrN,EAASoN,WAAWjM,YAK/B,WACHgM,EAAiB,MACjBI,EAAc,MACdF,EAAc,SAInB,IAQC,6BAEKnB,EAAcU,YAAYG,OAAS,EAAK,kBAAC,EAAD,MACrC,6BAEI,kBAAC,EAAD,MAECG,GAAiB,kBAAC,EAAD,CAAQlC,UAAW,eAAgB/K,KAAMiN,EAAezH,QAAQ,IAEjF6H,GAAc,kBAAC,EAAD,CAAQtC,UAAW,cAAe/K,KAAMqN,EAAY7H,QAAQ,IAE1E2H,GAAc,kBAAC,EAAD,CAAQpC,UAAW,mBAAoB/K,KAAMmN,EAAY3H,QAAQ,O,iBC6CrFgI,MArGf,WAAmB,IAAD,EAEiBtN,oBAAS,GAF1B,mBAEPuN,EAFO,KAEIC,EAFJ,OAGoBxN,oBAAS,GAH7B,mBAGPyN,EAHO,KAGIC,EAHJ,KAIR/J,EAAMC,iBAAO,MACb+J,EAAW/J,iBAAO,MALV,EAO6BM,qBAAW0H,GAA9Ca,EAPM,EAONA,YAAamB,EAPP,EAOOA,kBAGfC,EAAe,WAEM,IAAnB9C,OAAO+C,QACPN,GAAU,GACH7J,GAAOA,EAAImB,SAAWnB,EAAImB,QAAQiJ,yBACzCP,EAAU7J,EAAImB,QAAQiJ,wBAAwBC,KAAO,IAwB7D,OATA5N,qBAAU,WAGN,OAFA2K,OAAOI,iBAAiB,SAAU0C,GAE3B,WACH9C,OAAOK,oBAAoB,UAAU,kBAAMyC,QAEhD,IAIC,yBAAKxN,UAAU,wBAGX,yBAAKA,UAAS,iBAAYkN,EAAY,aAAe,IAAM5J,IAAKA,GAC5D,yBAAKtD,UAAU,QACX,yBAAKC,IAAK2N,IAAM1N,IAAK,UAGzB,yBAAKF,UAAU,eACX,wBAAIA,UAAU,eACV,wBAAIA,UAAU,iCACV,uBAAGI,KAAM,IAAKJ,UAAU,0BAAxB,QACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WACf,4BACI,4BAAI,uBAAGI,KAAM,IAAKJ,UAAU,UAAxB,SACJ,4BAAI,uBAAGI,KAAM,KAAT,aACJ,4BAAI,uBAAGA,KAAM,KAAT,WACJ,4BAAI,uBAAGA,KAAM,KAAT,mBACJ,4BAAI,uBAAGA,KAAM,KAAT,eAIhB,wBAAIJ,UAAU,oBAAmB,uBAAGI,KAAM,IAAKJ,UAAU,UAAxB,SACjC,wBAAIA,UAAU,oBAAmB,uBAAGI,KAAM,KAAT,aACjC,wBAAIJ,UAAU,oBAAmB,uBAAGI,KAAM,KAAT,WACjC,wBAAIJ,UAAU,oBAAmB,uBAAGI,KAAM,KAAT,mBACjC,wBAAIJ,UAAU,oBAAmB,uBAAGI,KAAM,KAAT,cAKzC,yBAAKJ,UAAU,kBACX,yBAAKA,UAAS,UAAKoN,EAAY,YAAc,eACzC,0BAAMpN,UAAU,OAAO+C,QAAS,kBApD3CqK,GAAaE,EAAS7I,SAAS6I,EAAS7I,QAAQoJ,aAErDR,GAAa,SAAA1E,GAAS,OAAKA,OAkD8C,kBAAC,IAAD,CAAiBtI,KAAMyN,OAChF,2BAAO9N,UAAU,cACbsD,IAAKgK,EACLnC,MAAOiB,EACP2B,SAAU,SAAC5I,GAAD,OAAOoI,EAAkBpI,EAAEyE,cAAcuB,QACnD6C,OAAQ,kBAAMX,GAAa,IAC3BhO,KAAK,OAAO4O,YAAY,4BAA4BC,UAAU,QAEtE,6BAAK,0BAAMlO,UAAU,QAAO,kBAAC,IAAD,CAAiBK,KAAM8N,QACnD,6BAAK,0BAAMnO,UAAU,QAAO,kBAAC,IAAD,CAAiBK,KAAM+N,QACnD,yBAAKpO,UAAU,gBACX,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,gBACZ,yBAAKC,IAAK,mLAAoLC,IAAK,YAEvM,0BAAMF,UAAU,gBC5E7BqO,MAff,WACI,OACI,yBAAKrO,UAAU,UAEX,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,aAAhB,cADJ,eAC+D,0BAAMA,UAAU,cAAa,kBAAC,IAAD,CAAiBK,KAAMiO,OADnH,OAIA,yBAAKtO,UAAU,gBACX,uBAAGI,KAAM,8BAA+BmC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBnC,KAAMkO,UCe1GC,EApBA,WAEX,IAAMC,ECVe,WAAO,IAAD,EACW9O,mBAAS,IADpB,mBACpByM,EADoB,KACPsC,EADO,KAO3B,MAAO,CAAEtC,cAAamB,kBAJIoB,uBAAY,SAACzP,GACnCwP,EAAexP,KAChB,KDKgB0P,GAEnB,OACI,yBAAK5O,UAAU,kBACX,kBAAC,EAAckL,SAAf,CAAwBC,MAAOsD,GAC3B,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAeI,SAAUnQ,kBACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoQ,UAAWrC,EAAMsC,OAAK,EAACC,KAAK,SAI/C,kBAAC,EAAD,Q,MEjBZC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAGJC,SAASC,eAAe,W","file":"static/js/main.e6486d1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/netflix-2.b8ce8f65.svg\";","import axios from \"axios\"\n\nconst API = \"https://api.themoviedb.org/3/\"\nconst URL = process.env.REACT_APP_TMDB_API\nexport const IMAGE_BASE = \"https://image.tmdb.org/t/p/\"\n\nexport async function getMovieInformation(id) {\n\n    return await axios.get(`${URL}movie/${id}?${API}&append_to_response=images,credits,similar`)\n\n}\n\n\nexport async function searchMoviesBy(text, page = 1) {\n\n    return await axios.get(`${URL}search/movie?${API}&language=en-US&query=${text}&page=${page}&include_adult=true`)\n\n}\n\nexport async function getMoviesByGenre(genre) {\n\n    return await axios.get(`${URL}discover/movie?with_genres=18&sort_by=popularity.desc&${API}`)\n\n}\n\n\nexport async function getMoviesBy(type) {\n\n    let discover = null\n\n    switch (type) {\n        case \"best\":\n            discover = `${URL}discover/movie?primary_release_year=2015&sort_by=popularity.desc&${API}`\n            break;\n        case \"populares\":\n            discover = `${URL}discover/movie?sort_by=popularity.desc&${API}`\n            break;\n        case \"kids\":\n            discover = `${URL}discover/movie?certification_country=US&certification=G&sort_by=popularity.desc&${API}`\n            break;\n        default:\n            discover = `${URL}discover/movie?primary_release_year=2019&sort_by=popularity.desc&${API}`\n\n    }\n\n\n    return await axios.get(discover)\n        .then(function (response) {\n\n            return response.data\n\n        })\n\n\n}","import React, { useEffect, useState } from 'react';\nimport { getMovieInformation } from \"../../api\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction BigBillboard() {\n\n    const [movie, setMovie] = useState(null)\n\n    const fetchMovie = async () => {\n\n        const response = await getMovieInformation(128)\n\n        return response\n    }\n\n    useEffect(() => {\n\n\n        fetchMovie().then(response => {\n            setMovie(response.data)\n\n        })\n\n        return () => setMovie(null)\n\n    }, [])\n\n    return (\n\n        <div className=\"billboard-content-limits\">\n            <div className=\"billboard-base\">\n                <div className=\"billboard-image-wrapper\">\n                    <img src={\"https://occ-0-2692-360.1.nflxso.net/dnm/api/v6/6AYY37jfdO6hpXcMjf9Yu5cnmO0/AAAABfa-QSMvnLx0U1cfYX7Yo9mZrmI2M1VeIcNMthA7AmC-EKG2sOh1fx7tkNOU0Eof6aKRF56p-5WZOd66NtatC4fWkCkN.jpg?r=6da\"} alt={\"hero\"} />\n\n                    <div className=\"billboard-vignette\"></div>\n                    <div className=\"billboard-vignette-bottom\"></div>\n                    <div className=\"billboard-maturity-rating\"><span>+13</span></div>\n\n                </div>\n\n                <div className=\"billboard-information\">\n                    <div className=\"logo-and-text\">\n\n                        <div className=\"billboard-title\">\n                            <img src={\"https://occ-0-2692-360.1.nflxso.net/dnm/api/v6/TsSRXvDuraoJ7apdkH6tsHhf-ZQ/AAAABe8TY2uebJ4BFANuTXLz5IhBxCLwg8EV7ZOw4K6pCX6KBw0ifxFHAiVVXLqo0p47hX9OOhCDSplQuMfsAUCNEIZ4pDMEcDnpmBpI.png?r=d80\"} alt=\"title\" />\n                        </div>\n\n                        <div className=\"billboard-description\">\n                            <div className=\"episode-title-container\"></div>\n                            <div className=\"synopsis\">{movie && movie.overview}</div>\n                        </div>\n\n                        <div className=\"billboard-link\">\n                            <a className=\"play-link\" href={\"/\"} >\n                                <button className=\"hasLabel\">\n                                    <span className=\"play-icon\"><FontAwesomeIcon icon={faPlay} /></span>\n                                    <span>Play</span>\n                                </button>\n                            </a>\n\n                            <button className=\"hasLabel play-link-secondary\">\n                                <span className=\"play-icon\"><FontAwesomeIcon icon={faQuestionCircle} /></span>\n                                <span>Information</span>\n                            </button>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n\n\n\n\n    );\n}\n\nexport default BigBillboard;\n","import React from \"react\"\n\nimport { IMAGE_BASE } from \"../../api\"\n\nconst Similar = ({ additionalMovieInfo }) => {\n    return (\n        <div className=\"menu-similar\">\n            <div className=\"menu-similar-content\">\n\n\n                {additionalMovieInfo.similar.results.map((similarMovie, index) => {\n\n                    if (index < 4) {\n                        return (\n                            <div className=\"similar-item\" key={index}>\n                                <div className=\"similar-item-image\"><img src={`${IMAGE_BASE}original/${similarMovie.backdrop_path}`} alt={\"item\"} /></div>\n                                <div className=\"similar-item-metada\">\n                                    <span className=\"similar-item-title\">{similarMovie.title}</span><br />\n                                    <span className=\"release-date\">{similarMovie.release_date}</span>\n                                </div>\n                                <div className=\"similar-item-synopsis\">{similarMovie.overview}</div>\n                            </div>\n                        )\n                    }\n\n                    return null\n\n                })}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Similar","import React from \"react\"\n\nconst Details = ({ additionalMovieInfo }) => {\n\n\n    const findOnebyType = (name, type, data) => {\n\n        let first = data.find((item, index) => item.department === type)\n\n        if (first) {\n            return (\n                <div className=\"menu-details-item\">\n                    <span className=\"details-item-title\">{name}</span>\n                    <span>{first.name}</span>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div className=\"menu-details\">\n            <div className=\"menu-details-content\">\n                <div className=\"menu-details-item\">\n                    <span className=\"details-item-title\">Crew</span>\n                    {additionalMovieInfo.credits.cast.map((item, index) => {\n                        if (index < 10) {\n                            return <span key={index}>{item.name}</span>\n                        }\n                        return null\n                    })}\n                </div>\n\n                {findOnebyType(\"Directing\", \"Directing\", additionalMovieInfo.credits.crew)}\n\n                {findOnebyType(\"Editing\", \"Editing\", additionalMovieInfo.credits.crew)}\n\n                {findOnebyType(\"Sound\", \"Sound\", additionalMovieInfo.credits.crew)}\n\n                <div className=\"menu-details-item\">\n                    <span className=\"details-item-title\">Genres</span>\n                    {additionalMovieInfo.genres.map((item, index) => {\n                        return (\n                            <span key={index}>{item.name}</span>\n                        )\n\n                    })}\n                </div>\n\n                {additionalMovieInfo.production_companies[0] && (\n                    <div className=\"menu-details-item\">\n                        <span className=\"details-item-title\">Production</span>\n                        <span>{additionalMovieInfo.production_companies[0].name}</span>\n\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Details","import React, { useState } from \"react\"\n\nimport Similar from \"../Similar\"\nimport Details from \"../Details\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IMAGE_BASE } from \"../../api\"\nimport { faTimes, faPlus, faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faImdb } from '@fortawesome/free-brands-svg-icons'\n\n\nconst SelectedItem = ({ currentSlide, additionalMovieInfo, closeInformationWindow }) => {\n\n    const [menuOption, setMenuOption] = useState(\"general-info\")\n\n    return (\n        <div className=\"additional-information\">\n\n\n            <div className={`ai-background ${menuOption !== \"general-info\" ? \"dim\" : null}`}>\n                <div className={`ai-background-shadow`} />\n                <div\n                    className=\"ai-background-image\"\n                    style={{ 'backgroundImage': `url(${IMAGE_BASE}original/${currentSlide.backdrop_path})` }}\n                />\n\n                <div className=\"ai-background-nav-shadow\"></div>\n            </div>\n\n            {additionalMovieInfo ? (\n                <React.Fragment>\n                    <div className=\"ai-content-area\">\n                        <div className=\"ai-content-area-container\">\n                            <h3>\n                                <div>{currentSlide.title}</div>\n                            </h3>\n\n                            {menuOption === \"general-info\" ? (\n                                <div className=\"jaw-bone-common\">\n                                    <div className=\"metadata\">\n                                        <span className=\"imdb\"><a href={`https://www.imdb.com/title/${additionalMovieInfo.imdb_id}`} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faImdb} /></a></span>\n                                        <span className=\"score\">{additionalMovieInfo.vote_average}</span>\n                                        <span className=\"year\">{currentSlide.release_date}</span>\n                                        <span className=\"duration\">{additionalMovieInfo.runtime}m</span>\n\n                                    </div>\n\n                                    <div className=\"synopsis\">\n                                        {currentSlide.overview}\n                                    </div>\n\n                                    <div className=\"actions\">\n                                        <div className=\"play-link\">\n                                            <button className=\"hasLabel\">\n                                                <span className=\"play-icon\"><FontAwesomeIcon icon={faPlay} /></span>\n                                                <span>Play</span>\n                                            </button>\n                                        </div>\n\n                                        <button className=\"hasLabel play-link-secondary\">\n                                            <span className=\"play-icon\"><FontAwesomeIcon icon={faPlus} /></span>\n                                            <span>My list</span>\n                                        </button>\n                                    </div>\n\n                                    <div className=\"meta-lists\">\n                                        <p className=\"inline-list\">\n                                            <span>Featuring:</span>\n                                            {additionalMovieInfo.credits.cast.map((person, index) => {\n                                                if (index < 6) return person.name + \" \"\n                                                return null\n                                            })}\n                                        </p>\n                                        <p className=\"inline-list\">\n                                            <span>Genres:</span>\n                                            {additionalMovieInfo.genres.map((genre, index) => {\n                                                if (index < 6) return genre.name + \" \"\n                                                return null\n                                            })}\n                                        </p>\n                                    </div>\n\n\n\n                                </div>\n                            ) : menuOption === \"similar\" ? (\n                                <Similar additionalMovieInfo={additionalMovieInfo} />) : menuOption === \"details\" ? (\n                                    <Details additionalMovieInfo={additionalMovieInfo} />\n                                ) : null}\n\n                            <ul className=\"menu\">\n                                <li className={`${menuOption === \"general-info\" && \"current\"}`} onClick={() => setMenuOption(\"general-info\")}>\n                                    <div className=\"menu-button\" >GENERAL INFORMATION</div><span></span>\n                                </li>\n                                <li className={`${menuOption === \"similar\" && \"current\"}`} onClick={() => setMenuOption(\"similar\")}>\n                                    <div className=\"menu-button\">SIMILAR</div><span></span>\n                                </li>\n                                <li className={`${menuOption === \"details\" && \"current\"}`} onClick={() => setMenuOption(\"details\")}>\n                                    <div className=\"menu-button\">DETAILS</div><span></span>\n                                </li>\n                            </ul>\n\n                        </div>\n\n                        <button className=\"ai-close-button\" onClick={() => closeInformationWindow()}><span><FontAwesomeIcon icon={faTimes} /></span></button>\n\n                    </div>\n                </React.Fragment>\n            ) : (<div className=\"ai-content-area\"><h2>Loading...</h2></div>)}\n\n\n        </div>)\n\n\n}\n\nexport default SelectedItem","export default [\n    {\n        \"id\": 28,\n        \"name\": \"Action\"\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Adventure\"\n    },\n    {\n        \"id\": 16,\n        \"name\": \"Animation\"\n    },\n    {\n        \"id\": 35,\n        \"name\": \"Comedy\"\n    },\n    {\n        \"id\": 80,\n        \"name\": \"Crime\"\n    },\n    {\n        \"id\": 99,\n        \"name\": \"Documentary\"\n    },\n    {\n        \"id\": 18,\n        \"name\": \"Drama\"\n    },\n    {\n        \"id\": 10751,\n        \"name\": \"Family\"\n    },\n    {\n        \"id\": 14,\n        \"name\": \"Fantasy\"\n    },\n    {\n        \"id\": 36,\n        \"name\": \"History\"\n    },\n    {\n        \"id\": 27,\n        \"name\": \"Horror\"\n    },\n    {\n        \"id\": 10402,\n        \"name\": \"Music\"\n    },\n    {\n        \"id\": 9648,\n        \"name\": \"Mystery\"\n    },\n    {\n        \"id\": 10749,\n        \"name\": \"Romance\"\n    },\n    {\n        \"id\": 878,\n        \"name\": \"Science Fiction\"\n    },\n    {\n        \"id\": 10770,\n        \"name\": \"TV Movie\"\n    },\n    {\n        \"id\": 53,\n        \"name\": \"Thriller\"\n    },\n    {\n        \"id\": 10752,\n        \"name\": \"War\"\n    },\n    {\n        \"id\": 37,\n        \"name\": \"Western\"\n    }\n]","import React from 'react';\n\nconst SliderContext = React.createContext(null);\n\nexport default SliderContext;","import React, { useRef, useState, useEffect, useContext } from 'react';\nimport { IMAGE_BASE } from \"../../api\"\nimport genresList from \"../../genres\"\nimport SliderContext from \"../Slider/context\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown, faPlayCircle, faThumbsUp, faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport useVisibility from \"../../hooks/useVisibility\"\n\n\nfunction SliderItem(props) {\n\n\n    const ref = useRef(null)\n    const [inViewport, setInViewport] = useState(false)\n    const [showOverlay, setShowOverlay] = useState(false)\n\n    const sliderWrapper = useContext(SliderContext);\n\n    const itemVisible = () => {\n        setInViewport(true)\n    }\n\n    const itemNotVisible = () => {\n        setInViewport(false)\n    }\n\n    const onHover = (e) => {\n\n        if (!sliderWrapper.currentSlide) {\n            props.hover(e)\n            setShowOverlay(true)\n        }\n\n    }\n\n    const onHoverLeave = (e) => {\n        props.reset(e)\n        setShowOverlay(false)\n    }\n\n    const isActive = sliderWrapper.currentSlide && sliderWrapper.currentSlide.id === props.title;\n\n    useVisibility(ref, itemVisible, itemNotVisible);\n\n    useEffect(() => {\n\n    }, [inViewport, setInViewport])\n\n    const translate = `translateX(${props.transform})`\n\n    const styled = { transform: translate, \"transformOrigin\": props.origin, transition: \"all 0.3s ease-in-out\" }\n\n    return (\n        <div\n            style={styled}\n            data-id={props.title}\n            className={`slider-item ${inViewport ? \"onScreen\" : \"\"} ${props.poster === true ? \"poster\" : \"card\"}`}\n            ref={ref}\n            onMouseLeave={(e) => onHoverLeave(e)}\n            onMouseEnter={(e) => onHover(e)}\n        >\n            <div className=\"boxart-container\">\n                <div className=\"boxart\">\n                    {props.poster === true ? (\n                        <React.Fragment>\n                            {props.data.backdrop_path ? <img src={`${IMAGE_BASE}w500/${props.data.poster_path}`} alt=\"boxart\" /> : <img style={{ \"background\": \"black\" }} alt=\"boxart\" />}\n                        </React.Fragment>\n                    ) : (\n                            <React.Fragment>\n                                {props.data.backdrop_path ? <img src={`${IMAGE_BASE}w500/${props.data.backdrop_path}`} alt=\"boxart\" /> : <img style={{ \"background\": \"black\" }} alt=\"boxart\" />}\n                            </React.Fragment>\n                        )}\n\n                </div>\n            </div>\n\n            <button onClick={() => props.onSelectSlide(props.title)} className=\"show-details\">\n                <span><FontAwesomeIcon icon={faAngleDown} /></span>\n            </button>\n\n            {props.poster === false && (\n                <div className={`item-overlay ${showOverlay ? \"open\" : \"\"}`}>\n                    <div className=\"item-wrapper\">\n                        <div className=\"item-overview\">\n                            <div className=\"item-overview-play\">\n                                <span><FontAwesomeIcon icon={faPlayCircle} /></span>\n                            </div>\n                            <div className=\"item-overview-title\">{props.data.title}</div>\n                            <div className=\"item-overview-metadata\">\n                                <span className=\"metadata-rating\">New</span>\n                                <span className=\"metadata-maturity\">{props.data.adult === true ? \"+18\" : \"+13\"}</span>\n                                <span>{props.data.vote_average}</span>\n                            </div>\n                            <div className=\"item-overview-synopsis\">\n                                {props.data.genre_ids.map((item, index) => {\n                                    if (index < 3) {\n                                        let genreName = genresList.find(genre => genre.id === item)\n\n                                        if (index > 0) {\n                                            return (<React.Fragment key={index}><span className=\"separator\"></span><span>{genreName.name}</span></React.Fragment>)\n                                        } else {\n                                            return <span key={index}>{genreName.name}</span>\n                                        }\n                                    }\n\n                                    return null\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"item-actions\">\n                            <div className=\"item-action-buttons\">\n                                <div><span><FontAwesomeIcon icon={faThumbsUp} /></span></div>\n                                <div><span><FontAwesomeIcon icon={faPlus} /></span></div>\n                            </div>\n                        </div>\n                        <div className=\"item-chevron\"></div>\n                    </div>\n\n                </div>\n            )}\n\n\n            {isActive && (<div className=\"mark\" />)}\n\n        </div>\n    );\n}\n\nexport default SliderItem;\n","import { useEffect } from \"react\"\n\n\nexport default function useVisibility(ref, callbackOnScreen, callbackOffScreen) {\n    useEffect(() => {\n        const observer = new IntersectionObserver(([entry]) => {\n\n            if (!entry.isIntersecting || entry.intersectionRatio < 0.8) {\n                callbackOffScreen()\n            } else {\n                callbackOnScreen()\n            }\n        }, {\n            root: null,\n            rootMargin: \"0px\",\n            threshold: [0, 0.8]\n        })\n\n        if (ref.current) {\n            observer.observe(ref.current)\n        }\n    }, [ref, callbackOnScreen, callbackOffScreen])\n}","import React, { useState, useEffect } from 'react'\nimport { getMovieInformation } from \"../api\"\n\nconst useSlider = (elementWidth, containerRef, countElements, data, poster) => {\n\n    const [viewed, setViewed] = useState(0);\n    const [distance, setDistance] = useState(0);\n    const [containerWidth, setContainerWidth] = useState(0);\n    const [totalInViewport, setTotalInViewport] = useState(0)\n    const [slider, setSlider] = useState(null)\n    const [currentSlide, setCurrentSlide] = useState(null);\n    const [content, setContent] = useState(data)\n    const [sliderIndex, setSliderIndex] = useState(0)\n    const [sliderPages, setSliderPages] = useState(0)\n    const hasPrev = distance < 0;\n    const hasNext = (viewed + totalInViewport) < countElements;\n\n    const [additionalMovieInfo, setAdditionalMovieInfo] = useState(null)\n\n    useEffect(() => {\n\n        if (containerRef.current && data) {\n\n            const containerWidth = containerRef.current.clientWidth;\n            const itemWidth = containerRef.current.firstChild.clientWidth\n            const totalInViewport = Math.ceil(containerWidth / itemWidth)\n\n            setSlider(containerRef.current.children)\n            setContainerWidth(containerWidth);\n            setTotalInViewport(totalInViewport);\n            setSliderPages(countElements / totalInViewport)\n\n        }\n    }, [containerRef, data, countElements, elementWidth])\n\n\n    let slideProps = {\n        style: { transform: `translate3d(${distance}px, 0, 0)` }\n    };\n\n    let transformProps = {\n        edge: {\n            left: poster ? \"-5%\" : \"-35%\",\n            right: poster ? \"5%\" : \"35%\"\n        },\n        normal: {\n            left: poster ? \"-10%\" : \"-70%\",\n            right: poster ? \"10%\" : \"70%\"\n        }\n    }\n\n\n    const paginationIndicator = (nPages) => {\n\n        let paginationList = []\n\n        for (let i = 0; i < nPages; i++) {\n\n            if (sliderIndex === i) {\n                paginationList.push(<li className=\"active\" key={i}></li>)\n            } else {\n                paginationList.push(<li key={i}></li>)\n            }\n\n\n        }\n\n        return paginationList\n\n    }\n\n\n    const moveSection = (type) => {\n\n\n        if (type === \"right\") {\n\n            setViewed(viewed + totalInViewport);\n            setDistance(distance - containerWidth)\n            setSliderIndex(prevState => prevState + 1)\n\n\n        } else if (type === \"left\") {\n\n            setViewed(viewed - totalInViewport);\n            setDistance(distance + containerWidth);\n            setSliderIndex(prevState => prevState - 1)\n\n        } else if (type === \"reset\") {\n            setViewed(0);\n            setDistance(0)\n            setSliderIndex(0)\n        }\n\n\n\n        if (currentSlide) {\n\n            let elementsWithClass = Object.entries(slider).filter(item => {\n\n                if (item[1].className.includes(\"onScreen\")) return true\n                return false\n            })\n\n            let selectedItem = null\n            let selectedItemIndex = null\n\n\n            if (type === \"right\") {\n\n\n                elementsWithClass = elementsWithClass.slice(-1)[0]\n                elementsWithClass = elementsWithClass[1].dataset.id\n\n                selectedItem = content.filter((item, index) => {\n                    if (item.id === parseInt(elementsWithClass)) {\n                        selectedItemIndex = index\n                        return true\n                    }\n                    return false\n\n                })[0]\n\n                selectedItem = content[selectedItemIndex + 1]\n\n            } else if (type === \"left\") {\n\n                elementsWithClass = elementsWithClass[0]\n                elementsWithClass = elementsWithClass[1].dataset.id\n\n                selectedItem = content.filter((item, index) => {\n                    if (item.id === parseInt(elementsWithClass)) {\n                        selectedItemIndex = index\n                        return true\n                    }\n                    return false\n\n                })[0]\n\n                selectedItem = content[selectedItemIndex - 1]\n\n            } else if (type === \"reset\") {\n                selectedItem = content[0]\n            }\n\n\n            setCurrentSlide(selectedItem)\n\n        }\n\n\n    }\n\n\n    const selectSlide = async (id) => {\n\n        const selected = await content.filter(item => item.id === id)[0]\n        setCurrentSlide(selected)\n\n        let details = await getMovieInformation(id).then(response => response.data)\n        setAdditionalMovieInfo(details)\n\n    }\n\n    const closeInformationWindow = () => {\n        setCurrentSlide(null)\n        setAdditionalMovieInfo(null)\n    }\n\n    const scaleTiles = (e) => {\n\n        e.preventDefault()\n\n        if (currentSlide) return\n\n        if (!slider) return\n\n        const slideItemIndex = Object.entries(slider).findIndex(item => item[1] === e.currentTarget)\n\n        const itemId = slider[slideItemIndex].dataset.id\n\n        const hoveredSlide = content.filter(item => item.id === parseInt(itemId))[0]\n\n\n        let nextItem = isOnScreen(slider[slideItemIndex + 1])\n        let prevItem = isOnScreen(slider[slideItemIndex - 1])\n\n        //EDGE CASE : CHECK IF FIRST LEFT OR LAST RIGHT ELEMENT\n\n        if (prevItem && nextItem) {\n\n            setContent(prevState => {\n\n                let newState = prevState.map((item, index) => {\n\n                    item.origin = \"center center\"\n\n                    if (hoveredSlide.id !== item.id && index > slideItemIndex) {\n                        item.transform = transformProps.edge.right\n\n                        return item\n                    } else if (hoveredSlide.id !== item.id && index < slideItemIndex) {\n                        item.transform = transformProps.edge.left\n                        return item\n                    } else {\n                        item.transform = \"0px\"\n                        return item\n                    }\n\n                })\n\n                return newState\n            })\n\n\n        } else if (!prevItem) {\n\n            setContent(prevState => {\n\n                let newState = prevState.map((item, index) => {\n\n                    if (hoveredSlide.id !== item.id && index > slideItemIndex) {\n                        item.transform = transformProps.normal.right\n                        item.origin = \"center center\"\n                        return item\n                    } else {\n                        item.transform = \"0px\"\n                        item.origin = \"left center\"\n\n                        return item\n                    }\n                })\n\n                return newState\n            })\n\n\n        } else if (!nextItem) {\n\n            setContent(prevState => {\n\n                let newState = prevState.map((item, index) => {\n                    if (hoveredSlide.id !== item.id && index < slideItemIndex) {\n                        item.transform = transformProps.normal.left\n                        item.origin = \"center center\"\n                        return item\n                    } else {\n                        item.transform = \"0px\"\n                        item.origin = \"center right \"\n                        return item\n                    }\n                })\n\n                return newState\n            })\n        }\n\n\n\n    }\n\n\n    const isOnScreen = (slide) => {\n\n        if (slide && slide.className.split(\" \").includes(\"onScreen\")) {\n            return true\n        }\n\n        return false\n\n    }\n\n    const resetSize = (e) => {\n\n        setContent(prevState => {\n\n            let newState = prevState.map((item, index) => {\n\n                item.transform = \"0px\"\n                return item\n\n            })\n\n            return newState\n        })\n    }\n\n\n\n\n    return { moveSection, selectSlide, closeInformationWindow, hasPrev, hasNext, scaleTiles, resetSize, sliderIndex, sliderPages, slideProps, content, currentSlide, additionalMovieInfo, paginationIndicator }\n\n}\n\n\nexport default useSlider\n","import React, { useRef, useEffect } from 'react';\nimport SelectedItem from \"../SelectedItem\"\nimport SliderItem from \"../SliderItem\"\nimport SliderContext from \"./context\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight, faChevronLeft, faUndo } from '@fortawesome/free-solid-svg-icons'\n\nimport useWindowWidth from \"../../hooks/useWindowWidth\"\nimport useSlider from \"../../hooks/useSlide\"\n\n\nfunction Slider({ mainTitle, data, poster }) {\n\n    const width = useWindowWidth()\n    const ref = useRef(null)\n\n    const {\n        moveSection,\n        selectSlide,\n        closeInformationWindow,\n        scaleTiles,\n        resetSize,\n        sliderPages,\n        slideProps,\n        hasPrev,\n        hasNext,\n        content,\n        currentSlide,\n        additionalMovieInfo,\n        paginationIndicator\n    } = useSlider(width, ref, 20, data, poster);\n\n    const contextValue = {\n        currentSlide\n    };\n\n    useEffect(() => { }, [width])\n\n    return (\n        <SliderContext.Provider value={contextValue}>\n            <div className=\"sliderBox\">\n                <h2 className=\"slider-header\">\n                    <a href={\"/\"}>\n                        <div>{mainTitle}</div>\n                        <div className=\"see-more\">Explore more</div>\n                        <div className=\"see-more-chevron\"><FontAwesomeIcon icon={faChevronRight} /></div>\n                    </a>\n                </h2>\n\n                <div className=\"slider-container\">\n                    <div className=\"slider\">\n\n                        <ul className=\"pagination-indicator\">\n\n                            {sliderPages > 0 ? (paginationIndicator(sliderPages)) : \"\"}\n\n                        </ul>\n\n                        <div className=\"sliderMask showPeek\">\n\n                            <div className={`slider-content ${currentSlide ? \"open\" : \"\"}`} ref={ref} {...slideProps} >\n\n                                {content.map(item => {\n                                    return <SliderItem\n                                        key={item.id}\n                                        title={item.id}\n                                        data={item}\n                                        hover={scaleTiles}\n                                        reset={resetSize}\n                                        transform={item.transform}\n                                        origin={item.origin}\n                                        onSelectSlide={selectSlide}\n                                        poster={poster}\n                                    />\n                                })}\n\n                            </div>\n\n                        </div>\n\n                        {hasNext && (<span className=\"handle handleNext\" onClick={() => moveSection(\"right\")}>\n                            <strong><FontAwesomeIcon icon={faChevronRight} /></strong>\n                        </span>)}\n\n                        {hasPrev && (<span className=\"handle handlePrev\" onClick={() => moveSection(\"left\")}>\n                            <strong><FontAwesomeIcon icon={faChevronLeft} /></strong>\n                        </span>)}\n\n                        {/* GO BACK TO ZERO */}\n                        {hasPrev && hasNext === false ? (<span className=\"handle handleNext\" onClick={() => moveSection(\"reset\")}>\n                            <strong><FontAwesomeIcon icon={faUndo} /></strong>\n                        </span>) : null}\n\n\n                    </div>\n                </div>\n\n                {currentSlide && <SelectedItem currentSlide={currentSlide} additionalMovieInfo={additionalMovieInfo} closeInformationWindow={closeInformationWindow} />}\n\n            </div>\n        </SliderContext.Provider>\n    );\n}\n\nexport default Slider;\n","import { useState, useEffect } from \"react\"\n\nexport default function useWindowWidth() {\n\n    const [width, setWidth] = useState(window.innerWidth)\n\n    const handleResize = () => setWidth(window.innerWidth)\n\n    useEffect(() => {\n\n        window.addEventListener('resize', handleResize)\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        };\n    }, [width])\n\n\n    return width\n}","import React from 'react';\n\nconst SearchContext = React.createContext(null);\n\nexport default SearchContext;","import React, { useContext, useEffect, useState } from \"react\"\nimport searchContext from \"../Search/context\"\nimport { searchMoviesBy, IMAGE_BASE } from \"../../api\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\n\nconst Search = () => {\n\n    const context = useContext(searchContext)\n    const [movies, setMovies] = useState(null)\n    const [page, setPage] = useState(1)\n    const [totalPages, setTotalPages] = useState(null)\n\n    const loadMoreMovies = (text) => {\n        queryNextBatch(text, page)\n    }\n\n    const queryNextBatch = async (text, page) => {\n\n        let nextPage = page + 1\n\n        return await searchMoviesBy(text, nextPage).then(response => {\n\n            if (movies) {\n\n                let loadedMovies = movies.concat(response.data.results)\n                setMovies(loadedMovies)\n                setPage(response.data.page)\n            }\n\n        })\n\n    }\n\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n            return await searchMoviesBy(context.searchInput, page).then(response => {\n\n                setMovies(response.data.results)\n                setPage(response.data.page)\n                setTotalPages(response.data.total_pages)\n\n            })\n        };\n\n        fetchData()\n\n        return () => setMovies(null)\n    }, [context, page])\n\n\n    const renderPosters = (data) => {\n\n        return data.map((item, index) => {\n\n            if (item.poster_path) return <div key={index}><img src={`${IMAGE_BASE}w500/${item.poster_path}`} alt={\"poster\"} /></div>\n            return null\n\n\n        })\n    }\n\n\n    return (\n        <div className=\"search-background\">\n\n            {movies ? (\n                <React.Fragment>\n                    {movies.length ? (\n                        <React.Fragment>\n                            <div className=\"search-container\">{renderPosters(movies)}</div>\n\n                            {page < totalPages ? (\n                                <div className=\"load-more\" onClick={() => loadMoreMovies(context.searchInput)}>\n                                    <span>\n                                        <FontAwesomeIcon icon={faChevronDown} />\n                                    </span>\n\n                                </div>) : null}\n\n                        </React.Fragment>\n\n                    ) : (<div className=\"not-found\">No results :/ </div>)}\n                </React.Fragment>\n            ) : (\n                    <div className=\"loading-content\">\n                        <div className=\"loading-circle\"></div>\n                        <span className=\"loading-name\">LOADING...</span>\n                    </div>\n\n                )}\n\n        </div>\n    )\n}\n\nexport default Search","import React, { useEffect, useState, useContext } from 'react';\nimport { getMoviesBy } from \"../../api\"\nimport BigBillboard from \"../BigBillboard\"\nimport Slider from \"../Slider\"\nimport Search from '../Search';\nimport SearchContext from \"../Search/context\"\n\n\nfunction Home() {\n\n\n    const [popularMovies, setPopularMovies] = useState(null)\n    const [bestMovies, setBestMovies] = useState(null)\n    const [kidsMovies, setKidsMovies] = useState(null)\n\n    const searchContext = useContext(SearchContext)\n\n\n    const fetchMovies = async () => {\n        let popularMovies = await getMoviesBy(\"populares\")\n        let kidsMovies = await getMoviesBy(\"kids\")\n        let bestMovies = await getMoviesBy(\"best\")\n\n        return { popularMovies, kidsMovies, bestMovies }\n    }\n\n    useEffect(() => {\n\n        fetchMovies().then(response => {\n\n            setPopularMovies(response.popularMovies.results)\n            setKidsMovies(response.kidsMovies.results)\n            setBestMovies(response.bestMovies.results)\n\n        })\n\n\n        return () => {\n            setPopularMovies(null)\n            setKidsMovies(null)\n            setBestMovies(null)\n        }\n\n\n    }, [])\n\n\n\n\n\n    return (\n\n        <div>\n\n            {searchContext.searchInput.length > 0 ? (<Search />) : (\n                <div>\n\n                    <BigBillboard />\n\n                    {popularMovies && <Slider mainTitle={\"Trending now\"} data={popularMovies} poster={false} />}\n\n                    {kidsMovies && <Slider mainTitle={\"Kids movies\"} data={kidsMovies} poster={true} />}\n\n                    {bestMovies && <Slider mainTitle={\"Best 2015 movies\"} data={bestMovies} poster={false} />}\n\n                </div>\n            )}\n\n        </div>\n\n\n    );\n}\n\nexport default Home;\n","import React, { useEffect, useRef, useState, useContext } from 'react';\nimport SearchContext from \"../Search/context\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faGift, faBell } from '@fortawesome/free-solid-svg-icons'\nimport logo from \"../../assets/netflix-2.svg\"\n\n\nfunction Header() {\n\n    const [pinHeader, setHeader] = useState(false)\n    const [searchBox, setSearchBox] = useState(false)\n    const ref = useRef(null)\n    const inputRef = useRef(null)\n\n    const { searchInput, updateSearchInput } = useContext(SearchContext)\n\n\n    const handleScroll = () => {\n\n        if (window.scrollY === 0) {\n            setHeader(false);\n        } else if (ref && ref.current && ref.current.getBoundingClientRect()) {\n            setHeader(ref.current.getBoundingClientRect().top <= 0);\n        }\n\n    };\n\n\n    const toggleSearchBox = () => {\n\n        if (!searchBox && inputRef.current) inputRef.current.focus();\n\n        setSearchBox(prevState => !prevState)\n\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n\n        return () => {\n            window.removeEventListener('scroll', () => handleScroll);\n        };\n    }, []);\n\n\n    return (\n        <div className=\"header-height-pinned\">\n\n\n            <div className={`header ${pinHeader ? 'pin-header' : ''}`} ref={ref}>\n                <div className=\"logo\">\n                    <img src={logo} alt={\"logo\"} />\n                </div>\n\n                <div className=\"header-menu\">\n                    <ul className=\"header-list\">\n                        <li className=\"header-list-item menu-trigger\">\n                            <a href={\"/\"} className=\"navigation-menu active\">Menu</a>\n                            <div className=\"submenu\">\n                                <div className=\"arrow\"></div>\n                                <div className=\"topbar\"></div>\n                                <ul>\n                                    <li><a href={\"/\"} className=\"active\">Home</a></li>\n                                    <li><a href={\"/\"}>TV shows</a></li>\n                                    <li><a href={\"/\"}>Movies</a></li>\n                                    <li><a href={\"/\"}>Recently added</a></li>\n                                    <li><a href={\"/\"}>My list</a></li>\n                                </ul>\n                            </div>\n                        </li>\n                        <li className=\"header-list-item\"><a href={\"/\"} className=\"active\">Home</a></li>\n                        <li className=\"header-list-item\"><a href={\"/\"}>TV shows</a></li>\n                        <li className=\"header-list-item\"><a href={\"/\"}>Movies</a></li>\n                        <li className=\"header-list-item\"><a href={\"/\"}>Recently added</a></li>\n                        <li className=\"header-list-item\"><a href={\"/\"}>My list</a></li>\n                    </ul>\n                </div>\n\n\n                <div className=\"header-options\">\n                    <div className={`${searchBox ? \"searchBox\" : \"searchIcon\"}`}>\n                        <span className=\"icon\" onClick={() => toggleSearchBox()}><FontAwesomeIcon icon={faSearch} /></span>\n                        <input className=\"searchInput\"\n                            ref={inputRef}\n                            value={searchInput}\n                            onChange={(e) => updateSearchInput(e.currentTarget.value)}\n                            onBlur={() => setSearchBox(false)}\n                            type=\"text\" placeholder=\"Titles, People, Genres...\" maxLength=\"80\" />\n                    </div>\n                    <div><span className=\"icon\"><FontAwesomeIcon icon={faGift} /></span></div>\n                    <div><span className=\"icon\"><FontAwesomeIcon icon={faBell} /></span></div>\n                    <div className=\"account-menu\">\n                        <div className=\"account-dropdown-menu\">\n                            <span className=\"presentation\">\n                                <img src={\"https://occ-0-2692-360.1.nflxso.net/dnm/api/v6/Z-WHgqd_TeJxSuha8aZ5WpyLcX8/AAAABWyw3UeUMaPP3aLxzskg3Bn5htGHqQymxiEGTbfM91FZ0zJAPoEfYQdvHW7FV06FcdXhPC_4F7zNR7TFKLLv6yo.png?r=88c\"} alt={\"avatar\"} />\n                            </span>\n                            <span className=\"caret\"></span>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faReact, faGithub } from '@fortawesome/free-brands-svg-icons'\n\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n\n            <div className=\"footer-content\">\n                <span className=\"copyright\">&copy; 2020 </span> made using <span className=\"react-icon\"><FontAwesomeIcon icon={faReact} /></span> by\n            </div>\n\n            <div className=\"social-links\">\n                <a href={\"https://github.com/zygisS22\"} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} /></a>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./Home\"\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\n\nimport SearchContext from \"./Search/context\"\nimport { useSearch } from \"../hooks/useSearch\"\n\n\nconst Routes = () => {\n\n    const searchText = useSearch()\n\n    return (\n        <div className=\"background-app\">\n            <SearchContext.Provider value={searchText}>\n                <Header />\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route component={Home} exact path=\"/\" />\n                    </Switch>\n                </BrowserRouter>\n            </SearchContext.Provider>\n            <Footer />\n        </div>\n    )\n}\n\n\nexport default Routes;","import { useState, useCallback } from \"react\"\n\nexport const useSearch = () => {\n    const [searchInput, setSearchInput] = useState(\"\")\n\n    const updateSearchInput = useCallback((text) => {\n        setSearchInput(text)\n    }, [])\n\n    return { searchInput, updateSearchInput }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './components/Routes';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './assets/App.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Routes />\n    </BrowserRouter>\n    ,\n    document.getElementById('root'));\n\n\n\n\n"],"sourceRoot":""}